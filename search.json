[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Материалы и методы",
    "section": "",
    "text": "Климатические условия оказывают существенное влияние на численность мелких млекопитающих (ссылки), однако такое влияние рассматривается чаще всего только на примере среднемесячных температур (ссылки). В данной работе уделено основное внимание воздействию так называемых экстремальных периодов, то есть периодов с отрицательной температурой и отсутствием снежного покрова. Такие явления могут оказывать губительное воздействие на мелких млекопитающих, особенно весной, когда, в отличие от осени, кормовой материал значительно истощен."
  },
  {
    "objectID": "index.html#материалы-и-методы",
    "href": "index.html#материалы-и-методы",
    "title": "Материалы и методы",
    "section": "Материалы и методы",
    "text": "Материалы и методы\nДля анализа современных климатических изменений района исследований были использованы данные измерений на метеостанции п. Бахта (62°27′48″ с. ш. 89°00′15″ в. д.), расположенной в 20 км к северу от стационара “Мирное” ИПЭЭ РАН. В суточном разрешении в месячном разрешении А также из поселка Бор и Верхнеимбатск за 1966-1976 годы (для летних месяцев) Данные получены из открытых источников: Включили в себя то-то В таких-то форматах"
  },
  {
    "objectID": "index.html#использованные-библиотеки",
    "href": "index.html#использованные-библиотеки",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Использованные библиотеки",
    "text": "Использованные библиотеки\nВсе вычисления были выполнены с помощью языка статистической обработки данных R в среде Rstudio. Были использованы как самостоятельно написанные функции, так и готовые решения, такие как:\n\n1library(tidyverse)\n2library(readxl)\n3library(plotly)\n4library(VIM)\n5library(imputeTS)\n6library(WaveletComp)\n\n\n1\n\nЭкосистема пакетов tidyverse, включающая в себя пакеты dplyr для “аккуратных” вычислений, ggplot2 для построения графиков и другие https://www.tidyverse.org/\n\n2\n\nиспользовался для импорта файлов Excel\n\n3\n\nпакет для создания интерактивных визуализаций\n\n4\n\nработа с пропущенными значениями, использовался для визуализации пропусков\n\n5\n\nинтерполирование пропущенных значений\n\n6\n\nВейвлет-преобразование временных рядов"
  },
  {
    "objectID": "index.html#импорт-данных-и-приведение-к-аккуратному-виду",
    "href": "index.html#импорт-данных-и-приведение-к-аккуратному-виду",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Импорт данных и приведение к “аккуратному” виду",
    "text": "Импорт данных и приведение к “аккуратному” виду\nИмпорт, первичная очистка и приведение к “аккуратному” виду\n\n\nПоказать код\n# Данные из Обнинска ------------------------------------------------------\nobninsk_temperature &lt;- read_excel(\"../data/1961_2005/23776_TTTR.xlsx\") |&gt; \n  select(Station = станция,\n         Year = год,\n         Month = месяц,\n         Day = день,\n         Tmin = Тмин,\n         Tavg = Тср,\n         Tmax = Тмакс,\n         Pr = осадки)\nobninsk_snow &lt;- read.csv2(\"../data/1961_2005/23776_snow.csv\", fileEncoding = \"windows-1251\")|&gt; \n  select(Station = Станция,\n         Year = Год,\n         Month = Месяц,\n         Day = День,\n         Sn = Высота_снежного_покрова,\n         Sn_description = Снежный_покров_.степень_покрытия)\nobninsk &lt;- obninsk_temperature |&gt; \n  left_join(obninsk_snow, by = c(\"Year\", \"Month\", \"Day\")) |&gt; \n  select(c(2:8,10))\n# Данные rp5.ru -----------------------------------------------------------\npaths &lt;- list.files(\"../data/2005_2023\", pattern = \"[.]xls$\", full.names = TRUE) #Просканировали все файлы в директории\nrp5 &lt;- paths |&gt; \n  map(readxl::read_excel) |&gt; \n  list_rbind()\nrm(paths)\n\nlevels(as.factor(rp5$tR)) # видим, что накопленные осадки измерялись не всегда за одинаковое количество времени\n\nrp5_select &lt;- rp5 |&gt; \n  separate_wider_delim(Local_time, \".\", names = c(\"Day\", \"Month\", \"Year\")) |&gt; # Разбиваем на отдельные столбцы\n  separate_wider_delim(Year, \" \", names = c(\"Year\", \"Time\")) |&gt; \n  select(Year, Month, Day,Tmin = Tn, Tavg = T, Tmax = Tx, Pr = RRR, Sn = sss) |&gt; \n  mutate(across(Month:Day, ~sub(\"^0+\", \"\",.)), # Чтобы, например, месяцы были не 04, а 4 (удаляем 0 в начале строки)\n         Pr = case_when(Pr == \"Осадков нет\" | Pr == \"Следы осадков\"  ~ \"0\",\n                        .default = Pr)) |&gt; \n  mutate_all(as.numeric) |&gt; \n  arrange(Year,Month, Day) |&gt; \n  group_by(Year, Month, Day) |&gt; \n  summarise(Tmin = mean(Tmin, na.rm = T),\n            Tavg = mean(Tavg, na.rm = T),\n            Tmax = mean(Tavg, na.rm = T),\n            Pr = sum(Pr, na.rm = T), #Потому что это накопленные осадки, нужно суммировать\n            Sn = mean(Sn, na.rm = T))\n\n\n## Проверка на повторы\nobninsk_temperature |&gt; \n  group_by(Station, Year, Month, Day) |&gt; \n  summarise_all(mean) |&gt; \n  nrow() # осталось столько же строк (16436, значит, повторяющихся данных нет)\nobninsk_snow |&gt; \n  group_by(Station, Year, Month, Day) |&gt; \n  summarise_all(mean) |&gt; \n  nrow() # осталось столько же строк (16102, значит, повторяющихся данных нет)\n\n# Объединим данные в один датасет -----------------------------------------------------\nclimate &lt;- rbind(obninsk, rp5_select)\nrm(obninsk, obninsk_temperature, obninsk_snow, rp5, rp5_select)\n\nwith_date &lt;- climate |&gt; \n  mutate(Date = make_date(Year, Month, Day)) # датафрейм с датами в формате дат,чтобы plot_ly смог построить интерактивный график\n\ninteractive_temperature_min_avg_max &lt;- function(df){\n  result &lt;- plot_ly(df, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Tmin, name = \"Tmin\") |&gt; \n  add_trace(x = ~Date, y = ~Tmax, name = \"Tmax\") |&gt;\n    add_trace(x = ~Date, y = ~Tavg, name = \"Tavg\") |&gt; \n  layout(showlegend = T, title='Temperature',\n         xaxis = list(rangeslider = list(visible = T)))\n  return(result)\n} # Функция для создания интерактивных графиков с тремя входными параметрами\n\n\nНа интерактивной карте четко видны выбросы и проблемы с летними месяцами 1966-1976\n\n\nПоказать код\ninteractive_temperature_min_avg_max(with_date)"
  },
  {
    "objectID": "index.html#очистка-измерений-суточного-разрешения-метеостанции-п.-бахта",
    "href": "index.html#очистка-измерений-суточного-разрешения-метеостанции-п.-бахта",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Очистка измерений суточного разрешения метеостанции п. Бахта",
    "text": "Очистка измерений суточного разрешения метеостанции п. Бахта\nПропуски измерений в сырых данных:\n\n\n\nПараметр\nКоличество пропусков\n\n\n\n\nсредняя температура\n271\n\n\nглубина снежного покрова\n3391\n\n\nсумма осадков\n1458\n\n\n\n\nsummary(climate) \n\n      Year          Month            Day             Tmin        \n Min.   :1961   Min.   : 1.00   Min.   : 1.00   Min.   :-88.600  \n 1st Qu.:1976   1st Qu.: 4.00   1st Qu.: 8.00   1st Qu.:-20.100  \n Median :1992   Median : 7.00   Median :16.00   Median : -4.500  \n Mean   :1992   Mean   : 6.51   Mean   :15.72   Mean   : -8.108  \n 3rd Qu.:2007   3rd Qu.:10.00   3rd Qu.:23.00   3rd Qu.:  3.800  \n Max.   :2023   Max.   :12.00   Max.   :31.00   Max.   : 22.200  \n NA's   :1      NA's   :1       NA's   :1       NA's   :493      \n      Tavg             Tmax               Pr               Sn        \n Min.   :-54.40   Min.   :-51.000   Min.   :  0.00   Min.   :   0.0  \n 1st Qu.:-15.65   1st Qu.:-11.762   1st Qu.:  0.00   1st Qu.:   0.0  \n Median : -1.70   Median :  0.400   Median :  0.40   Median :  26.0  \n Mean   : -4.46   Mean   : -1.234   Mean   :  1.49   Mean   : 173.3  \n 3rd Qu.:  7.40   3rd Qu.: 10.488   3rd Qu.:  1.60   3rd Qu.:  53.0  \n Max.   : 28.40   Max.   : 35.000   Max.   :813.00   Max.   :9999.0  \n NA's   :271      NA's   :399       NA's   :1458     NA's   :3391    \n\naggr(climate, prop = F, numbers = T) # Визуализация количества пропущенных значений из пакета VIM\n\n\n\n\n\nЕсли глубина снежного покрова равна 9999.0, его надо заменить на NA\nУдалил снег в летние месяцы\nЕсли осадки NA, а снег и температура не пропущены, то, скорее всего, осадков не было (=0)\n\n\n\nПоказать код\nclimate$Sn[climate$Sn == 9999] = NA \nclimate$Sn[climate$Sn == \"NaN\"] =NA  \nclimate$Sn[is.na(climate$Sn)==T & climate$Month == 6 |\n            climate$Month == 7 |climate$Month == 8 ] = 0\n\nclimate$Pr[is.na(climate$Pr)==T & is.na(climate$Tavg)==F & is.na(climate$Sn) == F] = 0 \n\naggr(climate, prop = F, numbers = T) \n\n\n\n\n\nПропуски измерений в очищенных данных:\n\n\n\nПараметр\nКоличество пропусков\nУбрали за предыдущую манипуляцию\n\n\n\n\nсредняя температура\n271\n0\n\n\nглубина снежного покрова\n1849\n1542\n\n\nсумма осадков\n293\n1165\n\n\n\n\nsummary(climate)\n\n      Year          Month            Day             Tmin        \n Min.   :1961   Min.   : 1.00   Min.   : 1.00   Min.   :-88.600  \n 1st Qu.:1976   1st Qu.: 4.00   1st Qu.: 8.00   1st Qu.:-20.100  \n Median :1992   Median : 7.00   Median :16.00   Median : -4.500  \n Mean   :1992   Mean   : 6.51   Mean   :15.72   Mean   : -8.108  \n 3rd Qu.:2007   3rd Qu.:10.00   3rd Qu.:23.00   3rd Qu.:  3.800  \n Max.   :2023   Max.   :12.00   Max.   :31.00   Max.   : 22.200  \n NA's   :1      NA's   :1       NA's   :1       NA's   :493      \n      Tavg             Tmax               Pr                Sn       \n Min.   :-54.40   Min.   :-51.000   Min.   :  0.000   Min.   :  0.0  \n 1st Qu.:-15.65   1st Qu.:-11.762   1st Qu.:  0.000   1st Qu.:  0.0  \n Median : -1.70   Median :  0.400   Median :  0.300   Median : 17.0  \n Mean   : -4.46   Mean   : -1.234   Mean   :  1.413   Mean   : 26.1  \n 3rd Qu.:  7.40   3rd Qu.: 10.488   3rd Qu.:  1.500   3rd Qu.: 50.0  \n Max.   : 28.40   Max.   : 35.000   Max.   :813.000   Max.   :127.0  \n NA's   :271      NA's   :399       NA's   :293       NA's   :1849   \n\n\nОставшиеся пропуски удалим методом линейной интерполяции (замена с помощью уравнения линейной регрессии y = kx+b, функция na_interpolation из пакета imputeTS)\n\n\nПоказать код\nclimate$Tavg &lt;- na_interpolation(climate$Tavg)\nclimate$Pr &lt;- na_interpolation(climate$Pr)\nclimate$Sn &lt;- na_interpolation(climate$Sn)\n\nsummary(climate)\n\n\n      Year          Month            Day             Tmin        \n Min.   :1961   Min.   : 1.00   Min.   : 1.00   Min.   :-88.600  \n 1st Qu.:1976   1st Qu.: 4.00   1st Qu.: 8.00   1st Qu.:-20.100  \n Median :1992   Median : 7.00   Median :16.00   Median : -4.500  \n Mean   :1992   Mean   : 6.51   Mean   :15.72   Mean   : -8.108  \n 3rd Qu.:2007   3rd Qu.:10.00   3rd Qu.:23.00   3rd Qu.:  3.800  \n Max.   :2023   Max.   :12.00   Max.   :31.00   Max.   : 22.200  \n NA's   :1      NA's   :1       NA's   :1       NA's   :493      \n      Tavg              Tmax               Pr                Sn        \n Min.   :-54.400   Min.   :-51.000   Min.   :  0.000   Min.   :  0.00  \n 1st Qu.:-15.700   1st Qu.:-11.762   1st Qu.:  0.000   1st Qu.:  0.00  \n Median : -1.700   Median :  0.400   Median :  0.300   Median : 13.00  \n Mean   : -4.509   Mean   : -1.234   Mean   :  1.418   Mean   : 24.96  \n 3rd Qu.:  7.200   3rd Qu.: 10.488   3rd Qu.:  1.500   3rd Qu.: 49.00  \n Max.   : 28.400   Max.   : 35.000   Max.   :813.000   Max.   :127.00  \n                   NA's   :399                                         \n\n\nПоказать код\naggr(climate, prop = F, numbers = T)"
  },
  {
    "objectID": "index.html#проверка-на-выбросы-измерений-суточного-разрешения-п.-бахта",
    "href": "index.html#проверка-на-выбросы-измерений-суточного-разрешения-п.-бахта",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Проверка на выбросы измерений суточного разрешения п. Бахта",
    "text": "Проверка на выбросы измерений суточного разрешения п. Бахта\nСреднесуточные температуры: пропусков нет (очистили ранее), но есть проблемы с летними периодами в 1966-1976 годах.\n\n\nПоказать код\nBakhta &lt;- climate |&gt; \n  select(Year, Month, Day, Tavg, Pr, Sn) |&gt; \n  mutate(Date = make_date(Year, Month, Day)) # датафрейм с датами в формате дат,чтобы plot_ly смог построить интерактивный график\n\nplot_ly(Bakhta, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Tavg, name = \"Tavg\") |&gt; \n  layout(showlegend = T, title='Temperature',\n         xaxis = list(rangeslider = list(visible = T)))\n\n\n\n\n\n\nГрафик атмосферных осадков, видно выбросы\n\n\nПоказать код\nplot_ly(Bakhta, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Pr, name = \"Precipitation\") |&gt; \n  layout(showlegend = T, title='Precipitation',\n         xaxis = list(rangeslider = list(visible = T)))\n\n\n\n\n\n\nОчень сильные отклонения заменил осреднениями по соседним значениям\n\n\nПоказать код\nBakhta$Pr[Bakhta$Pr == 813] = 2\nBakhta$Pr[Bakhta$Pr == 204.3] = 3\nBakhta$Pr[Bakhta$Pr == 202] = 3\nplot_ly(Bakhta, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Pr, name = \"Precipitation\") |&gt; \n  layout(showlegend = T, title='Precipitation',\n         xaxis = list(rangeslider = list(visible = T)))\n\n\n\n\n\n\nГлубина снежного покрова\n\n\nПоказать код\nplot_ly(Bakhta, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Sn, name = \"Snow\") |&gt; \n  layout(showlegend = T, title='Snow',\n         xaxis = list(rangeslider = list(visible = T)))\n\n\n\n\n\n\nПропусков в необходимых измерениях больше нет\n\n\nПоказать код\naggr(climate, prop = F, numbers = T)\n\n\n\n\n\nПоказать код\n#write.csv2(Bakhta, \"data/cleaned/Bakhta_daily_attention1966-1976(problems_with_summer).csv\")"
  },
  {
    "objectID": "index.html#расчёт-среднемесячных-показателей-для-метеостанции-п.-бахта-1966-1976гг-пока-с-исходными-данными",
    "href": "index.html#расчёт-среднемесячных-показателей-для-метеостанции-п.-бахта-1966-1976гг-пока-с-исходными-данными",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Расчёт среднемесячных показателей для метеостанции п. Бахта (1966-1976гг пока с исходными данными)",
    "text": "Расчёт среднемесячных показателей для метеостанции п. Бахта (1966-1976гг пока с исходными данными)\n\n\nПоказать код\nBakhta &lt;- read.csv2(\"../data/cleaned/Bakhta_daily_attention1966-1976(problems_with_summer).csv\")\n\nBakhta_monthly &lt;- Bakhta |&gt; \n  group_by(Year, Month) |&gt; \n  summarise(Tavg = mean(Tavg),\n            Sn = mean(Sn),\n            Pr = mean(Pr)) |&gt; \n  mutate(Date = make_date(Year, Month))\n\n\nСреднемесячные температуры приземного воздуха метеостанция п. Бахта\n\n\nПоказать код\nplot_ly(Bakhta_monthly, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Tavg, name = \"Tavg\") |&gt; \n  layout(showlegend = T, title='Temperature',\n         xaxis = list(rangeslider = list(visible = T)))"
  },
  {
    "objectID": "index.html#замена-пропущенных-значений-летних-температур-1966-1976",
    "href": "index.html#замена-пропущенных-значений-летних-температур-1966-1976",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Замена пропущенных значений летних температур 1966-1976",
    "text": "Замена пропущенных значений летних температур 1966-1976\nПоскольку летние температуры 1966-1976гг ошибочные, их необходимо заменить. Ближайшие к Бахте метеостанции расположены в п. Бор (на 110 км южнее) и в п. Верхнеимбатск (94 км севернее).\nЗагрузим данные суточного разрешения для этих метеостанций:\n\n\nПоказать код\nBor_daily &lt;- read_table(\"../data/daily/Bor_daily.txt\", col_names = F) |&gt; \n  select(Station = X1,\n         Year = X2,\n         Month = X3,\n         Day = X4,\n         Tmin = X6,\n         Tavg = X7,\n         Tmax = X8,\n         Pr = X9) |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\nVerkhneimbatsk_daily &lt;- read_table(\"../data/daily/Verkhneimbatsk_daily.txt\", col_names = F) |&gt; \n  select(Station = X1,\n         Year = X2,\n         Month = X3,\n         Day = X4,\n         Tmin = X6,\n         Tavg = X7,\n         Tmax = X8,\n         Pr = X9) |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\n\nГрафик суточных температур по данным метеостанции п. Бор\n\n\nПоказать код\ninteractive_temperature_min_avg_max(Bor_daily)\n\n\n\n\n\n\nГрафик суточных температур по данным метеостанции п. Верхнеимбатск\n\n\nПоказать код\ninteractive_temperature_min_avg_max(Verkhneimbatsk_daily)\n\n\n\n\n\n\nПо обеим метеостанциям большие проблемы с суточными измерениями\nЗагрузим данные месячного разрешения из этих же поселков\n\n\nПоказать код\n# Бор и Верхнеимбатск месячные данные -------------------------------------\nBor_monthly &lt;- read_delim(\"../data/monthly/Bor_monthly.txt\", col_names = F,\n                          delim = \";\" , col_types = \"n\") |&gt; \n  mutate_all(as.numeric) |&gt; \n  select(Station = X1,\n         Year = X2,\n         \"1\" = X3,\n         \"2\" = X4,\n         \"3\" = X5,\n         \"4\" = X6,\n         \"5\" = X7,\n         \"6\" = X8,\n         \"7\" = X9,\n         \"8\" = X10,\n         \"9\" = X11,\n         \"10\" = X12,\n         \"11\" = X13,\n         \"12\" = X14) |&gt; \n  pivot_longer(cols = -c(Station, Year), names_to = \"Month\", values_to = \"Tavg\") |&gt; \n  mutate(Day = \"1\") |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\n\nVerkhneimbatsk_monthly &lt;- read_delim(\"../data/monthly/Verkhneimbatsk_monthly.txt\", col_names = F,\n                                     delim = \";\" , col_types = \"n\") |&gt; \n  mutate_all(as.numeric) |&gt; \n  select(Station = X1,\n         Year = X2,\n         \"1\" = X3,\n         \"2\" = X4,\n         \"3\" = X5,\n         \"4\" = X6,\n         \"5\" = X7,\n         \"6\" = X8,\n         \"7\" = X9,\n         \"8\" = X10,\n         \"9\" = X11,\n         \"10\" = X12,\n         \"11\" = X13,\n         \"12\" = X14) |&gt; \n  pivot_longer(cols = -c(Station, Year), names_to = \"Month\", values_to = \"Tavg\") |&gt; \n  mutate(Day = \"1\") |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\n\nГрафик температур (месячное разрешение) по данным метеостанции п. Бор\n\n\nПоказать код\nplot_ly(Bor_monthly, type = 'scatter', mode = 'lines')%&gt;%\n  add_trace(x = ~Date, y = ~Tavg)%&gt;%\n  layout(showlegend = F, title='Месячные температуры в Бору',\n         xaxis = list(rangeslider = list(visible = T)))\n\n\n\n\n\n\nГрафик суточных температур по данным метеостанции п. Верхнеимбатск\n\n\nПоказать код\nplot_ly(Verkhneimbatsk_monthly, type = 'scatter', mode = 'lines')%&gt;%\n  add_trace(x = ~Date, y = ~Tavg)%&gt;%\n  layout(showlegend = F, title='Месячные температуры в Верхнеимбатске',\n         xaxis = list(rangeslider = list(visible = T)))\n\n\n\n\n\n\nна первый взгляд, с этими данными гораздо меньше проблем, будем работать с ними."
  },
  {
    "objectID": "index.html#оценка-корреляции-между-временными-рядами-измерений-температуры-приземного-воздуха-суточное-разрешение-трех-метеостанций",
    "href": "index.html#оценка-корреляции-между-временными-рядами-измерений-температуры-приземного-воздуха-суточное-разрешение-трех-метеостанций",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Оценка корреляции между временными рядами измерений температуры приземного воздуха (суточное разрешение) трех метеостанций",
    "text": "Оценка корреляции между временными рядами измерений температуры приземного воздуха (суточное разрешение) трех метеостанций\nОбъединим данные со всех трех метеостанций и поместим в один датасет, после чего проверим на пропуски. Видим, что пропуски есть.\n\n\nПоказать код\nBor_Verkhn &lt;- Bor_monthly |&gt; \n  left_join(Verkhneimbatsk_monthly, by = c(\"Year\", \"Month\")) |&gt; \n  select(Year, Month, Bor_tavg = Tavg.x, Verkhn_tavg = Tavg.y) |&gt; \n  mutate(Year = as.integer(Year),\n         Month = as.integer(Month))\n\nBakhta_Bor_Verkhneimbatsk &lt;- Bakhta_monthly |&gt; \n  left_join(Bor_Verkhn, by = c(\"Year\", \"Month\")) |&gt; \n  mutate(Date = make_date(Year, Month)) |&gt; \n  ungroup() |&gt; \n  select(Date,Bakhta_tavg = Tavg, Bor_tavg, Verkhn_tavg) |&gt; \n  filter(!is.na(Date)) |&gt; \n  as.data.frame()\naggr(Bakhta_Bor_Verkhneimbatsk, prop = F, numbers = T) # \n\n\n\n\n\nОчистим пропуски методом простой линейной интерполяции\n\nBakhta_Bor_Verkhneimbatsk$Bor_tavg &lt;- na_interpolation(Bakhta_Bor_Verkhneimbatsk$Bor_tavg)\nBakhta_Bor_Verkhneimbatsk$Verkhn_tavg &lt;- na_interpolation(Bakhta_Bor_Verkhneimbatsk$Verkhn_tavg)\naggr(Bakhta_Bor_Verkhneimbatsk, prop = F, numbers = T) #Пропусков нет\n\n\n\n\nЗапустим кросс-вейвлет преобразование для оценки корреляции между временными рядами.\n\n\nПоказать код\nBakhta_Bor_cross &lt;- analyze.coherency(Bakhta_Bor_Verkhneimbatsk, c(\"Bakhta_tavg\", \"Bor_tavg\"), verbose = F)\nBakhta_Verkhn_cross &lt;- analyze.coherency(Bakhta_Bor_Verkhneimbatsk, c(\"Bakhta_tavg\", \"Verkhn_tavg\"), verbose = F)\nVerkhn_Bor_cross &lt;- analyze.coherency(Bakhta_Bor_Verkhneimbatsk, c(\"Verkhn_tavg\", \"Bor_tavg\") , verbose = F)\n\n\nПостроим спектрограммы проведенного анализа\n\n\nПоказать код\nwc.image(Bakhta_Bor_cross, which.image=\"wp\", timelab=\"time (month)\", periodlab=\"period (Month)\", \n         main=\"Кросс-вейвлет Бор-Бахта\", \n         plot.arrow = F,\n         show.date = T,\n         legend.params=list(lab=\"wavelet power-spectrum levels\", lab.line=3.5, label.digits=3))\n\n\nWarning in wc.image(Bakhta_Bor_cross, which.image = \"wp\", timelab = \"time (month)\", : \nPlease check your calendar dates, format and time zone: dates may not be in an unambiguous format or chronological. The default numerical axis was used instead.\n\n\n\n\n\nПоказать код\nwc.image(Bakhta_Verkhn_cross, which.image=\"wp\", timelab=\"time (month)\", periodlab=\"period (Month)\", \n         main=\"Кросс-вейвлет Бахта-Верхнеимбатск\", \n         plot.arrow = F,\n         show.date = T,\n         legend.params=list(lab=\"wavelet power-spectrum levels\", lab.line=3.5, label.digits=3))\n\n\nWarning in wc.image(Bakhta_Verkhn_cross, which.image = \"wp\", timelab = \"time (month)\", : \nPlease check your calendar dates, format and time zone: dates may not be in an unambiguous format or chronological. The default numerical axis was used instead.\n\n\n\n\n\nПоказать код\nwc.image(Bakhta_Verkhn_cross, which.image=\"wp\", timelab=\"time (month)\", periodlab=\"period (Month)\", \n         main=\"Кросс-вейвлет Бор-Верхнеимбатск\", \n         plot.arrow = F,\n         show.date = T,\n         legend.params=list(lab=\"wavelet power-spectrum levels\", lab.line=3.5, label.digits=3))\n\n\nWarning in wc.image(Bakhta_Verkhn_cross, which.image = \"wp\", timelab = \"time (month)\", : \nPlease check your calendar dates, format and time zone: dates may not be in an unambiguous format or chronological. The default numerical axis was used instead."
  },
  {
    "objectID": "index.html#замена-некорректных-значений-температур-в-п.-бахта",
    "href": "index.html#замена-некорректных-значений-температур-в-п.-бахта",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Замена некорректных значений температур в п. Бахта",
    "text": "Замена некорректных значений температур в п. Бахта\nТаким образом, все 3 временных ряда сильно коррелируют между собой. Заменим ошибочные значения темератур (лето 1966-1976гг) в п. Бахта осредненными значениями, полученными с метеостанций п. Бор и Верхнеимбатск\n\n\nПоказать код\nBor_Verkhn &lt;- Bor_monthly |&gt; \n  left_join(Verkhneimbatsk_monthly, by = c(\"Year\", \"Month\")) |&gt; \n  select(Year, Month, Bor_tavg = Tavg.x, Verkhn_tavg = Tavg.y) |&gt; \n  filter(Year %in% c(1966:1976), Month %in% c(6:8)) |&gt; \n  group_by(Year, Month) |&gt; \n  summarise(Tavg = mean(Bor_tavg, Verkhn_tavg)) |&gt; \n  mutate(Year = as.integer(Year),\n         Month = as.integer(Month))\n\nBakhta_monthly_new &lt;- Bakhta_monthly |&gt; \n  left_join(Bor_Verkhn, by = c(\"Year\", \"Month\")) |&gt; \n  mutate(Tavg = ifelse(is.na(Tavg.y) == F, Tavg.y, Tavg.x)) |&gt; \n  select(Year, Month, Tavg, Sn, Pr, Date)\n\n\nГрафик среднемесячных температур в п. Бахта (исходные данные)\n\n\nПоказать код\nplot_ly(Bakhta_monthly, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Tavg, name = \"Tavg\") |&gt; \n  layout(showlegend = T, title='Temperature',\n        xaxis = list(rangeslider = list(visible = T)))\n\n\n\n\n\n\nГрафик среднемесячных температур в Бахте (1966-1976гг 6-8 мес заменены на осредненные из Бора и Верхнеимбатска)\n\n\nПоказать код\nplot_ly(Bakhta_monthly_new, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Tavg, name = \"Tavg\") |&gt; \n  layout(showlegend = T, title='Temperature',\n         xaxis = list(rangeslider = list(visible = T)))\n\n\n\n\n\n\nПоказать код\n#write.csv2(Bakhta_monthly_new, \"data/cleaned/Bakhta_monthly_1966-1976_replaced_by_average_Bor_Verkhn.csv\")"
  },
  {
    "objectID": "norms&anomalies.html",
    "href": "norms&anomalies.html",
    "title": "Исходный код: расчёт климатических норм и аномалий",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "norms&anomalies.html#quarto",
    "href": "norms&anomalies.html#quarto",
    "title": "Исходный код: расчёт климатических норм и аномалий",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "norms&anomalies.html#running-code",
    "href": "norms&anomalies.html#running-code",
    "title": "Исходный код: расчёт климатических норм и аномалий",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "index.html#quarto",
    "href": "index.html#quarto",
    "title": "Материалы и методы",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "index.html#running-code",
    "href": "index.html#running-code",
    "title": "Материалы и методы",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "import&cleaning.html",
    "href": "import&cleaning.html",
    "title": "Исходный код: импорт и очистка данных",
    "section": "",
    "text": "Климатические условия оказывают существенное влияние на численность мелких млекопитающих (ссылки), однако такое влияние рассматривается чаще всего только на примере среднемесячных температур (ссылки). В данной работе, уделено основное внимание воздействию так называемых экстремальных периодов, то есть периодов с отрицательной температурой и отсутствием снежного покрова. Такие явления могут оказывать губительное воздействие на мелких млекопитающих, особенно весной, когда, в отличие от осени, кормовой материал значительно истощен."
  },
  {
    "objectID": "import&cleaning.html#материалы-и-методы",
    "href": "import&cleaning.html#материалы-и-методы",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Материалы и методы",
    "text": "Материалы и методы\nДля анализа современных климатических изменений района исследований были использованы данные измерений на метеостанции п. Бахта (62°27′48″ с. ш. 89°00′15″ в. д.), расположенной в 20 км к северу от стационара “Мирное” ИПЭЭ РАН. В суточном разрешении в месячном разрешении А также из поселка Бор и Верхнеимбатск за 1966-1976 годы (для летних месяцев) Данные получены из открытых источников: Включили в себя то-то В таких-то форматах"
  },
  {
    "objectID": "import&cleaning.html#использованные-библиотеки",
    "href": "import&cleaning.html#использованные-библиотеки",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Использованные библиотеки",
    "text": "Использованные библиотеки\nВсе вычисления были выполнены с помощью языка статистической обработки данных R в среде Rstudio. Были использованы как самостоятельно написанные функции, так и готовые решения, такие как:\n\n1library(tidyverse)\n2library(readxl)\n3library(plotly)\n4library(VIM)\n5library(imputeTS)\n6library(WaveletComp)\n\n\n1\n\nЭкосистема пакетов tidyverse, включающая в себя пакеты dplyr для “аккуратных” вычислений, ggplot2 для построения графиков и другие https://www.tidyverse.org/\n\n2\n\nиспользовался для импорта файлов Excel\n\n3\n\nпакет для создания интерактивных визуализаций\n\n4\n\nработа с пропущенными значениями, использовался для визуализации пропусков\n\n5\n\nинтерполирование пропущенных значений\n\n6\n\nВейвлет-преобразование временных рядов"
  },
  {
    "objectID": "import&cleaning.html#импорт-данных-и-приведение-к-аккуратному-виду",
    "href": "import&cleaning.html#импорт-данных-и-приведение-к-аккуратному-виду",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Импорт данных и приведение к “аккуратному” виду",
    "text": "Импорт данных и приведение к “аккуратному” виду\nИмпорт, первичная очистка и приведение к “аккуратному” виду\n\n\nПоказать код\n# Данные из Обнинска ------------------------------------------------------\nobninsk_temperature &lt;- read_excel(\"../data/1961_2005/23776_TTTR.xlsx\") |&gt; \n  select(Station = станция,\n         Year = год,\n         Month = месяц,\n         Day = день,\n         Tmin = Тмин,\n         Tavg = Тср,\n         Tmax = Тмакс,\n         Pr = осадки)\nobninsk_snow &lt;- read.csv2(\"../data/1961_2005/23776_snow.csv\", fileEncoding = \"windows-1251\")|&gt; \n  select(Station = Станция,\n         Year = Год,\n         Month = Месяц,\n         Day = День,\n         Sn = Высота_снежного_покрова,\n         Sn_description = Снежный_покров_.степень_покрытия)\nobninsk &lt;- obninsk_temperature |&gt; \n  left_join(obninsk_snow, by = c(\"Year\", \"Month\", \"Day\")) |&gt; \n  select(c(2:8,10))\n# Данные rp5.ru -----------------------------------------------------------\npaths &lt;- list.files(\"../data/2005_2023\", pattern = \"[.]xls$\", full.names = TRUE) #Просканировали все файлы в директории\nrp5 &lt;- paths |&gt; \n  map(readxl::read_excel) |&gt; \n  list_rbind()\nrm(paths)\n\nlevels(as.factor(rp5$tR)) # видим, что накопленные осадки измерялись не всегда за одинаковое количество времени\n\nrp5_select &lt;- rp5 |&gt; \n  separate_wider_delim(Local_time, \".\", names = c(\"Day\", \"Month\", \"Year\")) |&gt; # Разбиваем на отдельные столбцы\n  separate_wider_delim(Year, \" \", names = c(\"Year\", \"Time\")) |&gt; \n  select(Year, Month, Day,Tmin = Tn, Tavg = T, Tmax = Tx, Pr = RRR, Sn = sss) |&gt; \n  mutate(across(Month:Day, ~sub(\"^0+\", \"\",.)), # Чтобы, например, месяцы были не 04, а 4 (удаляем 0 в начале строки)\n         Pr = case_when(Pr == \"Осадков нет\" | Pr == \"Следы осадков\"  ~ \"0\",\n                        .default = Pr)) |&gt; \n  mutate_all(as.numeric) |&gt; \n  arrange(Year,Month, Day) |&gt; \n  group_by(Year, Month, Day) |&gt; \n  summarise(Tmin = mean(Tmin, na.rm = T),\n            Tavg = mean(Tavg, na.rm = T),\n            Tmax = mean(Tavg, na.rm = T),\n            Pr = sum(Pr, na.rm = T), #Потому что это накопленные осадки, нужно суммировать\n            Sn = mean(Sn, na.rm = T))\n\n\n## Проверка на повторы\nobninsk_temperature |&gt; \n  group_by(Station, Year, Month, Day) |&gt; \n  summarise_all(mean) |&gt; \n  nrow() # осталось столько же строк (16436, значит, повторяющихся данных нет)\nobninsk_snow |&gt; \n  group_by(Station, Year, Month, Day) |&gt; \n  summarise_all(mean) |&gt; \n  nrow() # осталось столько же строк (16102, значит, повторяющихся данных нет)\n\n# Объединим данные в один датасет -----------------------------------------------------\nclimate &lt;- rbind(obninsk, rp5_select)\nrm(obninsk, obninsk_temperature, obninsk_snow, rp5, rp5_select)\n\nwith_date &lt;- climate |&gt; \n  mutate(Date = make_date(Year, Month, Day)) # датафрейм с датами в формате дат,чтобы plot_ly смог построить интерактивный график\n\ninteractive_temperature_min_avg_max &lt;- function(df){\n  result &lt;- plot_ly(df, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Tmin, name = \"Tmin\") |&gt; \n  add_trace(x = ~Date, y = ~Tmax, name = \"Tmax\") |&gt;\n    add_trace(x = ~Date, y = ~Tavg, name = \"Tavg\") |&gt; \n  layout(showlegend = T, title='Temperature',\n         xaxis = list(rangeslider = list(visible = T)))\n  return(result)\n} # Функция для создания интерактивных графиков с тремя входными параметрами\n\n\nНа интерактивной карте четко видны выбросы и проблемы с летними месяцами 1966-1976\n\n\nПоказать код\ninteractive_temperature_min_avg_max(with_date)"
  },
  {
    "objectID": "import&cleaning.html#очистка-измерений-суточного-разрешения-метеостанции-п.-бахта",
    "href": "import&cleaning.html#очистка-измерений-суточного-разрешения-метеостанции-п.-бахта",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Очистка измерений суточного разрешения метеостанции п. Бахта",
    "text": "Очистка измерений суточного разрешения метеостанции п. Бахта\nПропуски измерений в сырых данных:\n\n\n\nПараметр\nКоличество пропусков\n\n\n\n\nсредняя температура\n271\n\n\nглубина снежного покрова\n3391\n\n\nсумма осадков\n1458\n\n\n\n\nsummary(climate) \n\n      Year          Month            Day             Tmin        \n Min.   :1961   Min.   : 1.00   Min.   : 1.00   Min.   :-88.600  \n 1st Qu.:1976   1st Qu.: 4.00   1st Qu.: 8.00   1st Qu.:-20.100  \n Median :1992   Median : 7.00   Median :16.00   Median : -4.500  \n Mean   :1992   Mean   : 6.51   Mean   :15.72   Mean   : -8.108  \n 3rd Qu.:2007   3rd Qu.:10.00   3rd Qu.:23.00   3rd Qu.:  3.800  \n Max.   :2023   Max.   :12.00   Max.   :31.00   Max.   : 22.200  \n NA's   :1      NA's   :1       NA's   :1       NA's   :493      \n      Tavg             Tmax               Pr               Sn        \n Min.   :-54.40   Min.   :-51.000   Min.   :  0.00   Min.   :   0.0  \n 1st Qu.:-15.65   1st Qu.:-11.762   1st Qu.:  0.00   1st Qu.:   0.0  \n Median : -1.70   Median :  0.400   Median :  0.40   Median :  26.0  \n Mean   : -4.46   Mean   : -1.234   Mean   :  1.49   Mean   : 173.3  \n 3rd Qu.:  7.40   3rd Qu.: 10.488   3rd Qu.:  1.60   3rd Qu.:  53.0  \n Max.   : 28.40   Max.   : 35.000   Max.   :813.00   Max.   :9999.0  \n NA's   :271      NA's   :399       NA's   :1458     NA's   :3391    \n\naggr(climate, prop = F, numbers = T) # Визуализация количества пропущенных значений из пакета VIM\n\n\n\n\n\nЕсли глубина снежного покрова равна 9999.0, его надо заменить на NA\nУдалил снег в летние месяцы\nЕсли осадки NA, а снег и температура не пропущены, то, скорее всего, осадков не было (=0)\n\n\n\nПоказать код\nclimate$Sn[climate$Sn == 9999] = NA \nclimate$Sn[climate$Sn == \"NaN\"] =NA  \nclimate$Sn[is.na(climate$Sn)==T & climate$Month == 6 |\n            climate$Month == 7 |climate$Month == 8 ] = 0\n\nclimate$Pr[is.na(climate$Pr)==T & is.na(climate$Tavg)==F & is.na(climate$Sn) == F] = 0 \n\naggr(climate, prop = F, numbers = T) \n\n\n\n\n\nПропуски измерений в очищенных данных:\n\n\n\nПараметр\nКоличество пропусков\nУбрали за предыдущую манипуляцию\n\n\n\n\nсредняя температура\n271\n0\n\n\nглубина снежного покрова\n1849\n1542\n\n\nсумма осадков\n293\n1165\n\n\n\n\nsummary(climate)\n\n      Year          Month            Day             Tmin        \n Min.   :1961   Min.   : 1.00   Min.   : 1.00   Min.   :-88.600  \n 1st Qu.:1976   1st Qu.: 4.00   1st Qu.: 8.00   1st Qu.:-20.100  \n Median :1992   Median : 7.00   Median :16.00   Median : -4.500  \n Mean   :1992   Mean   : 6.51   Mean   :15.72   Mean   : -8.108  \n 3rd Qu.:2007   3rd Qu.:10.00   3rd Qu.:23.00   3rd Qu.:  3.800  \n Max.   :2023   Max.   :12.00   Max.   :31.00   Max.   : 22.200  \n NA's   :1      NA's   :1       NA's   :1       NA's   :493      \n      Tavg             Tmax               Pr                Sn       \n Min.   :-54.40   Min.   :-51.000   Min.   :  0.000   Min.   :  0.0  \n 1st Qu.:-15.65   1st Qu.:-11.762   1st Qu.:  0.000   1st Qu.:  0.0  \n Median : -1.70   Median :  0.400   Median :  0.300   Median : 17.0  \n Mean   : -4.46   Mean   : -1.234   Mean   :  1.413   Mean   : 26.1  \n 3rd Qu.:  7.40   3rd Qu.: 10.488   3rd Qu.:  1.500   3rd Qu.: 50.0  \n Max.   : 28.40   Max.   : 35.000   Max.   :813.000   Max.   :127.0  \n NA's   :271      NA's   :399       NA's   :293       NA's   :1849   \n\n\nОставшиеся пропуски удалим методом линейной интерполяции (замена с помощью уравнения линейной регрессии y = kx+b, функция na_interpolation из пакета imputeTS)\n\n\nПоказать код\nclimate$Tavg &lt;- na_interpolation(climate$Tavg)\nclimate$Pr &lt;- na_interpolation(climate$Pr)\nclimate$Sn &lt;- na_interpolation(climate$Sn)\n\nsummary(climate)\n\n\n      Year          Month            Day             Tmin        \n Min.   :1961   Min.   : 1.00   Min.   : 1.00   Min.   :-88.600  \n 1st Qu.:1976   1st Qu.: 4.00   1st Qu.: 8.00   1st Qu.:-20.100  \n Median :1992   Median : 7.00   Median :16.00   Median : -4.500  \n Mean   :1992   Mean   : 6.51   Mean   :15.72   Mean   : -8.108  \n 3rd Qu.:2007   3rd Qu.:10.00   3rd Qu.:23.00   3rd Qu.:  3.800  \n Max.   :2023   Max.   :12.00   Max.   :31.00   Max.   : 22.200  \n NA's   :1      NA's   :1       NA's   :1       NA's   :493      \n      Tavg              Tmax               Pr                Sn        \n Min.   :-54.400   Min.   :-51.000   Min.   :  0.000   Min.   :  0.00  \n 1st Qu.:-15.700   1st Qu.:-11.762   1st Qu.:  0.000   1st Qu.:  0.00  \n Median : -1.700   Median :  0.400   Median :  0.300   Median : 13.00  \n Mean   : -4.509   Mean   : -1.234   Mean   :  1.418   Mean   : 24.96  \n 3rd Qu.:  7.200   3rd Qu.: 10.488   3rd Qu.:  1.500   3rd Qu.: 49.00  \n Max.   : 28.400   Max.   : 35.000   Max.   :813.000   Max.   :127.00  \n                   NA's   :399                                         \n\n\nПоказать код\naggr(climate, prop = F, numbers = T)"
  },
  {
    "objectID": "import&cleaning.html#проверка-на-выбросы-измерений-суточного-разрешения-п.-бахта",
    "href": "import&cleaning.html#проверка-на-выбросы-измерений-суточного-разрешения-п.-бахта",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Проверка на выбросы измерений суточного разрешения п. Бахта",
    "text": "Проверка на выбросы измерений суточного разрешения п. Бахта\nСреднесуточные температуры: пропусков нет (очистили ранее), но есть проблемы с летними периодами в 1966-1976 годах.\n\n\nПоказать код\nBakhta &lt;- climate |&gt; \n  select(Year, Month, Day, Tavg, Pr, Sn) |&gt; \n  mutate(Date = make_date(Year, Month, Day)) # датафрейм с датами в формате дат,чтобы plot_ly смог построить интерактивный график\n\nplot_ly(Bakhta, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Tavg, name = \"Tavg\") |&gt; \n  layout(showlegend = T, title='Temperature',\n         xaxis = list(rangeslider = list(visible = T)))\n\n\n\n\n\n\nГрафик атмосферных осадков, видно выбросы\n\n\nПоказать код\nplot_ly(Bakhta, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Pr, name = \"Precipitation\") |&gt; \n  layout(showlegend = T, title='Precipitation',\n         xaxis = list(rangeslider = list(visible = T)))\n\n\n\n\n\n\nОчень сильные отклонения заменил осреднениями по соседним значениям\n\n\nПоказать код\nBakhta$Pr[Bakhta$Pr == 813] = 2\nBakhta$Pr[Bakhta$Pr == 204.3] = 3\nBakhta$Pr[Bakhta$Pr == 202] = 3\nplot_ly(Bakhta, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Pr, name = \"Precipitation\") |&gt; \n  layout(showlegend = T, title='Precipitation',\n         xaxis = list(rangeslider = list(visible = T)))\n\n\n\n\n\n\nГлубина снежного покрова\n\n\nПоказать код\nplot_ly(Bakhta, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Sn, name = \"Snow\") |&gt; \n  layout(showlegend = T, title='Snow',\n         xaxis = list(rangeslider = list(visible = T)))\n\n\n\n\n\n\nПропусков в необходимых измерениях больше нет\n\n\nПоказать код\naggr(climate, prop = F, numbers = T)\n\n\n\n\n\nПоказать код\n#write.csv2(Bakhta, \"data/cleaned/Bakhta_daily_attention1966-1976(problems_with_summer).csv\")"
  },
  {
    "objectID": "import&cleaning.html#расчёт-среднемесячных-показателей-для-метеостанции-п.-бахта-1966-1976гг-пока-с-исходными-данными",
    "href": "import&cleaning.html#расчёт-среднемесячных-показателей-для-метеостанции-п.-бахта-1966-1976гг-пока-с-исходными-данными",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Расчёт среднемесячных показателей для метеостанции п. Бахта (1966-1976гг пока с исходными данными)",
    "text": "Расчёт среднемесячных показателей для метеостанции п. Бахта (1966-1976гг пока с исходными данными)\n\n\nПоказать код\nBakhta &lt;- read.csv2(\"../data/cleaned/Bakhta_daily_attention1966-1976(problems_with_summer).csv\")\n\nBakhta_monthly &lt;- Bakhta |&gt; \n  group_by(Year, Month) |&gt; \n  summarise(Tavg = mean(Tavg),\n            Sn = mean(Sn),\n            Pr = mean(Pr)) |&gt; \n  mutate(Date = make_date(Year, Month))\n\n\nСреднемесячные температуры приземного воздуха метеостанция п. Бахта\n\n\nПоказать код\nplot_ly(Bakhta_monthly, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Tavg, name = \"Tavg\") |&gt; \n  layout(showlegend = T, title='Temperature',\n         xaxis = list(rangeslider = list(visible = T)))"
  },
  {
    "objectID": "import&cleaning.html#замена-пропущенных-значений-летних-температур-1966-1976",
    "href": "import&cleaning.html#замена-пропущенных-значений-летних-температур-1966-1976",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Замена пропущенных значений летних температур 1966-1976",
    "text": "Замена пропущенных значений летних температур 1966-1976\nПоскольку летние температуры 1966-1976гг ошибочные, их необходимо заменить. Ближайшие к Бахте метеостанции расположены в п. Бор (на 110 км южнее) и в п. Верхнеимбатск (94 км севернее).\nЗагрузим данные суточного разрешения для этих метеостанций:\n\n\nПоказать код\nBor_daily &lt;- read_table(\"../data/daily/Bor_daily.txt\", col_names = F) |&gt; \n  select(Station = X1,\n         Year = X2,\n         Month = X3,\n         Day = X4,\n         Tmin = X6,\n         Tavg = X7,\n         Tmax = X8,\n         Pr = X9) |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\nVerkhneimbatsk_daily &lt;- read_table(\"../data/daily/Verkhneimbatsk_daily.txt\", col_names = F) |&gt; \n  select(Station = X1,\n         Year = X2,\n         Month = X3,\n         Day = X4,\n         Tmin = X6,\n         Tavg = X7,\n         Tmax = X8,\n         Pr = X9) |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\n\nГрафик суточных температур по данным метеостанции п. Бор\n\n\nПоказать код\ninteractive_temperature_min_avg_max(Bor_daily)\n\n\n\n\n\n\nГрафик суточных температур по данным метеостанции п. Верхнеимбатск\n\n\nПоказать код\ninteractive_temperature_min_avg_max(Verkhneimbatsk_daily)\n\n\n\n\n\n\nПо обеим метеостанциям большие проблемы с суточными измерениями\nЗагрузим данные месячного разрешения из этих же поселков\n\n\nПоказать код\n# Бор и Верхнеимбатск месячные данные -------------------------------------\nBor_monthly &lt;- read_delim(\"../data/monthly/Bor_monthly.txt\", col_names = F,\n                          delim = \";\" , col_types = \"n\") |&gt; \n  mutate_all(as.numeric) |&gt; \n  select(Station = X1,\n         Year = X2,\n         \"1\" = X3,\n         \"2\" = X4,\n         \"3\" = X5,\n         \"4\" = X6,\n         \"5\" = X7,\n         \"6\" = X8,\n         \"7\" = X9,\n         \"8\" = X10,\n         \"9\" = X11,\n         \"10\" = X12,\n         \"11\" = X13,\n         \"12\" = X14) |&gt; \n  pivot_longer(cols = -c(Station, Year), names_to = \"Month\", values_to = \"Tavg\") |&gt; \n  mutate(Day = \"1\") |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\n\nVerkhneimbatsk_monthly &lt;- read_delim(\"../data/monthly/Verkhneimbatsk_monthly.txt\", col_names = F,\n                                     delim = \";\" , col_types = \"n\") |&gt; \n  mutate_all(as.numeric) |&gt; \n  select(Station = X1,\n         Year = X2,\n         \"1\" = X3,\n         \"2\" = X4,\n         \"3\" = X5,\n         \"4\" = X6,\n         \"5\" = X7,\n         \"6\" = X8,\n         \"7\" = X9,\n         \"8\" = X10,\n         \"9\" = X11,\n         \"10\" = X12,\n         \"11\" = X13,\n         \"12\" = X14) |&gt; \n  pivot_longer(cols = -c(Station, Year), names_to = \"Month\", values_to = \"Tavg\") |&gt; \n  mutate(Day = \"1\") |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\n\nГрафик температур (месячное разрешение) по данным метеостанции п. Бор\n\n\nПоказать код\nplot_ly(Bor_monthly, type = 'scatter', mode = 'lines')%&gt;%\n  add_trace(x = ~Date, y = ~Tavg)%&gt;%\n  layout(showlegend = F, title='Месячные температуры в Бору',\n         xaxis = list(rangeslider = list(visible = T)))\n\n\n\n\n\n\nГрафик суточных температур по данным метеостанции п. Верхнеимбатск\n\n\nПоказать код\nplot_ly(Verkhneimbatsk_monthly, type = 'scatter', mode = 'lines')%&gt;%\n  add_trace(x = ~Date, y = ~Tavg)%&gt;%\n  layout(showlegend = F, title='Месячные температуры в Верхнеимбатске',\n         xaxis = list(rangeslider = list(visible = T)))\n\n\n\n\n\n\nна первый взгляд, с этими данными гораздо меньше проблем, будем работать с ними."
  },
  {
    "objectID": "import&cleaning.html#оценка-корреляции-между-временными-рядами-измерений-температуры-приземного-воздуха-суточное-разрешение-трех-метеостанций",
    "href": "import&cleaning.html#оценка-корреляции-между-временными-рядами-измерений-температуры-приземного-воздуха-суточное-разрешение-трех-метеостанций",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Оценка корреляции между временными рядами измерений температуры приземного воздуха (суточное разрешение) трех метеостанций",
    "text": "Оценка корреляции между временными рядами измерений температуры приземного воздуха (суточное разрешение) трех метеостанций\nОбъединим данные со всех трех метеостанций и поместим в один датасет, после чего проверим на пропуски. Видим, что пропуски есть.\n\n\nПоказать код\nBor_Verkhn &lt;- Bor_monthly |&gt; \n  left_join(Verkhneimbatsk_monthly, by = c(\"Year\", \"Month\")) |&gt; \n  select(Year, Month, Bor_tavg = Tavg.x, Verkhn_tavg = Tavg.y) |&gt; \n  mutate(Year = as.integer(Year),\n         Month = as.integer(Month))\n\nBakhta_Bor_Verkhneimbatsk &lt;- Bakhta_monthly |&gt; \n  left_join(Bor_Verkhn, by = c(\"Year\", \"Month\")) |&gt; \n  mutate(Date = make_date(Year, Month)) |&gt; \n  ungroup() |&gt; \n  select(Date,Bakhta_tavg = Tavg, Bor_tavg, Verkhn_tavg) |&gt; \n  filter(!is.na(Date)) |&gt; \n  as.data.frame()\naggr(Bakhta_Bor_Verkhneimbatsk, prop = F, numbers = T) # \n\n\n\n\n\nОчистим пропуски методом простой линейной интерполяции\n\nBakhta_Bor_Verkhneimbatsk$Bor_tavg &lt;- na_interpolation(Bakhta_Bor_Verkhneimbatsk$Bor_tavg)\nBakhta_Bor_Verkhneimbatsk$Verkhn_tavg &lt;- na_interpolation(Bakhta_Bor_Verkhneimbatsk$Verkhn_tavg)\naggr(Bakhta_Bor_Verkhneimbatsk, prop = F, numbers = T) #Пропусков нет\n\n\n\n\nЗапустим кросс-вейвлет преобразование для оценки корреляции между временными рядами.\n\n\nПоказать код\nBakhta_Bor_cross &lt;- analyze.coherency(Bakhta_Bor_Verkhneimbatsk, c(\"Bakhta_tavg\", \"Bor_tavg\"), verbose = F)\nBakhta_Verkhn_cross &lt;- analyze.coherency(Bakhta_Bor_Verkhneimbatsk, c(\"Bakhta_tavg\", \"Verkhn_tavg\"), verbose = F)\nVerkhn_Bor_cross &lt;- analyze.coherency(Bakhta_Bor_Verkhneimbatsk, c(\"Verkhn_tavg\", \"Bor_tavg\") , verbose = F)\n\n\nПостроим спектрограммы проведенного анализа\n\n\nПоказать код\nwc.image(Bakhta_Bor_cross, which.image=\"wp\", timelab=\"time (month)\", periodlab=\"period (Month)\", \n         main=\"Кросс-вейвлет Бор-Бахта\", \n         plot.arrow = F,\n         show.date = T,\n         legend.params=list(lab=\"wavelet power-spectrum levels\", lab.line=3.5, label.digits=3))\n\n\nWarning in wc.image(Bakhta_Bor_cross, which.image = \"wp\", timelab = \"time (month)\", : \nPlease check your calendar dates, format and time zone: dates may not be in an unambiguous format or chronological. The default numerical axis was used instead.\n\n\n\n\n\nПоказать код\nwc.image(Bakhta_Verkhn_cross, which.image=\"wp\", timelab=\"time (month)\", periodlab=\"period (Month)\", \n         main=\"Кросс-вейвлет Бахта-Верхнеимбатск\", \n         plot.arrow = F,\n         show.date = T,\n         legend.params=list(lab=\"wavelet power-spectrum levels\", lab.line=3.5, label.digits=3))\n\n\nWarning in wc.image(Bakhta_Verkhn_cross, which.image = \"wp\", timelab = \"time (month)\", : \nPlease check your calendar dates, format and time zone: dates may not be in an unambiguous format or chronological. The default numerical axis was used instead.\n\n\n\n\n\nПоказать код\nwc.image(Bakhta_Verkhn_cross, which.image=\"wp\", timelab=\"time (month)\", periodlab=\"period (Month)\", \n         main=\"Кросс-вейвлет Бор-Верхнеимбатск\", \n         plot.arrow = F,\n         show.date = T,\n         legend.params=list(lab=\"wavelet power-spectrum levels\", lab.line=3.5, label.digits=3))\n\n\nWarning in wc.image(Bakhta_Verkhn_cross, which.image = \"wp\", timelab = \"time (month)\", : \nPlease check your calendar dates, format and time zone: dates may not be in an unambiguous format or chronological. The default numerical axis was used instead."
  },
  {
    "objectID": "import&cleaning.html#замена-некорректных-значений-температур-в-п.-бахта",
    "href": "import&cleaning.html#замена-некорректных-значений-температур-в-п.-бахта",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Замена некорректных значений температур в п. Бахта",
    "text": "Замена некорректных значений температур в п. Бахта\nТаким образом, все 3 временных ряда сильно коррелируют между собой. Заменим ошибочные значения темератур (лето 1966-1976гг) в п. Бахта осредненными значениями, полученными с метеостанций п. Бор и Верхнеимбатск\n\n\nПоказать код\nBor_Verkhn &lt;- Bor_monthly |&gt; \n  left_join(Verkhneimbatsk_monthly, by = c(\"Year\", \"Month\")) |&gt; \n  select(Year, Month, Bor_tavg = Tavg.x, Verkhn_tavg = Tavg.y) |&gt; \n  filter(Year %in% c(1966:1976), Month %in% c(6:8)) |&gt; \n  group_by(Year, Month) |&gt; \n  summarise(Tavg = mean(Bor_tavg, Verkhn_tavg)) |&gt; \n  mutate(Year = as.integer(Year),\n         Month = as.integer(Month))\n\nBakhta_monthly_new &lt;- Bakhta_monthly |&gt; \n  left_join(Bor_Verkhn, by = c(\"Year\", \"Month\")) |&gt; \n  mutate(Tavg = ifelse(is.na(Tavg.y) == F, Tavg.y, Tavg.x)) |&gt; \n  select(Year, Month, Tavg, Sn, Pr, Date)\n\n\nГрафик среднемесячных температур в п. Бахта (исходные данные)\n\n\nПоказать код\nplot_ly(Bakhta_monthly, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Tavg, name = \"Tavg\") |&gt; \n  layout(showlegend = T, title='Temperature',\n        xaxis = list(rangeslider = list(visible = T)))\n\n\n\n\n\n\nГрафик среднемесячных температур в Бахте (1966-1976гг 6-8 мес заменены на осредненные из Бора и Верхнеимбатска)\n\n\nПоказать код\nplot_ly(Bakhta_monthly_new, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Tavg, name = \"Tavg\") |&gt; \n  layout(showlegend = T, title='Temperature',\n         xaxis = list(rangeslider = list(visible = T)))\n\n\n\n\n\n\nПоказать код\n#write.csv2(Bakhta_monthly_new, \"data/cleaned/Bakhta_monthly_1966-1976_replaced_by_average_Bor_Verkhn.csv\")"
  },
  {
    "objectID": "import_cleaning.html",
    "href": "import_cleaning.html",
    "title": "Исходный код: импорт и очистка данных",
    "section": "",
    "text": "Все вычисления были выполнены с помощью языка статистической обработки данных R в среде Rstudio. Были использованы как самостоятельно написанные функции, так и готовые решения, такие как:\n\n1library(tidyverse)\n2library(readxl)\n3library(plotly)\n4library(VIM)\n5library(imputeTS)\n6library(WaveletComp)\n\n\n1\n\nЭкосистема пакетов tidyverse, включающая в себя пакеты dplyr для “аккуратных” вычислений, ggplot2 для построения графиков и другие https://www.tidyverse.org/\n\n2\n\nИспользовался для импорта файлов Excel\n\n3\n\nПакет для создания интерактивных визуализаций\n\n4\n\nИспользовался для визуализации количества пропущенных значений\n\n5\n\nИспользовался для заполнения пропущенных значений линейной интерполяцией\n\n6\n\nВейвлет-преобразование временных рядов"
  },
  {
    "objectID": "import_cleaning.html#использованные-библиотеки",
    "href": "import_cleaning.html#использованные-библиотеки",
    "title": "Исходный код: импорт и очистка данных",
    "section": "",
    "text": "Все вычисления были выполнены с помощью языка статистической обработки данных R в среде Rstudio. Были использованы как самостоятельно написанные функции, так и готовые решения, такие как:\n\n1library(tidyverse)\n2library(readxl)\n3library(plotly)\n4library(VIM)\n5library(imputeTS)\n6library(WaveletComp)\n\n\n1\n\nЭкосистема пакетов tidyverse, включающая в себя пакеты dplyr для “аккуратных” вычислений, ggplot2 для построения графиков и другие https://www.tidyverse.org/\n\n2\n\nИспользовался для импорта файлов Excel\n\n3\n\nПакет для создания интерактивных визуализаций\n\n4\n\nИспользовался для визуализации количества пропущенных значений\n\n5\n\nИспользовался для заполнения пропущенных значений линейной интерполяцией\n\n6\n\nВейвлет-преобразование временных рядов"
  },
  {
    "objectID": "import_cleaning.html#импорт-данных-и-приведение-к-аккуратному-виду",
    "href": "import_cleaning.html#импорт-данных-и-приведение-к-аккуратному-виду",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Импорт данных и приведение к “аккуратному” виду",
    "text": "Импорт данных и приведение к “аккуратному” виду\n\n\n\n\n\n\nNote\n\n\n\nЕсть три правила, которые делают набор данных “аккуратным” Hadley Wickham et al.:\n1. Каждая переменная должна быть в собственной колонке\n2. Каждое наблюдение должно быть в собственной строке\n3. Каждое значение должно быть в собственной ячейке\n\n\n\n\nПоказать код\n# Данные из Обнинска ------------------------------------------------------\nobninsk_temperature &lt;- read_excel(\"../data/1961_2005/23776_TTTR.xlsx\") |&gt; \n  select(Station = станция,\n         Year = год,\n         Month = месяц,\n         Day = день,\n         Tmin = Тмин,\n         Tavg = Тср,\n         Tmax = Тмакс,\n         Pr = осадки)\nobninsk_snow &lt;- read.csv2(\"../data/1961_2005/23776_snow.csv\", fileEncoding = \"windows-1251\")|&gt; \n  select(Station = Станция,\n         Year = Год,\n         Month = Месяц,\n         Day = День,\n         Sn = Высота_снежного_покрова,\n         Sn_description = Снежный_покров_.степень_покрытия)\nobninsk &lt;- obninsk_temperature |&gt; \n  left_join(obninsk_snow, by = c(\"Year\", \"Month\", \"Day\")) |&gt; \n  select(c(2:8,10))\n# Данные rp5.ru -----------------------------------------------------------\npaths &lt;- list.files(\"../data/2005_2023\", pattern = \"[.]xls$\", full.names = TRUE) #Просканировали все файлы в директории\nrp5 &lt;- paths |&gt; \n  map(readxl::read_excel) |&gt; \n  list_rbind()\nrm(paths)\n\nlevels(as.factor(rp5$tR)) # видим, что накопленные осадки измерялись не всегда за одинаковое количество времени\n\nrp5_select &lt;- rp5 |&gt; \n  separate_wider_delim(Local_time, \".\", names = c(\"Day\", \"Month\", \"Year\")) |&gt; # Разбиваем на отдельные столбцы\n  separate_wider_delim(Year, \" \", names = c(\"Year\", \"Time\")) |&gt; \n  select(Year, Month, Day,Tmin = Tn, Tavg = T, Tmax = Tx, Pr = RRR, Sn = sss) |&gt; \n  mutate(across(Month:Day, ~sub(\"^0+\", \"\",.)), # Чтобы, например, месяцы были не 04, а 4 (удаляем 0 в начале строки)\n         Pr = case_when(Pr == \"Осадков нет\" | Pr == \"Следы осадков\"  ~ \"0\",\n                        .default = Pr)) |&gt; \n  mutate_all(as.numeric) |&gt; \n  arrange(Year,Month, Day) |&gt; \n  group_by(Year, Month, Day) |&gt; \n  summarise(Tmin = mean(Tmin, na.rm = T),\n            Tavg = mean(Tavg, na.rm = T),\n            Tmax = mean(Tavg, na.rm = T),\n            Pr = sum(Pr, na.rm = T), #Потому что это накопленные осадки, нужно суммировать\n            Sn = mean(Sn, na.rm = T))\n\n\n## Проверка на повторы\nobninsk_temperature |&gt; \n  group_by(Station, Year, Month, Day) |&gt; \n  summarise_all(mean) |&gt; \n  nrow() # осталось столько же строк (16436, значит, повторяющихся данных нет)\nobninsk_snow |&gt; \n  group_by(Station, Year, Month, Day) |&gt; \n  summarise_all(mean) |&gt; \n  nrow() # осталось столько же строк (16102, значит, повторяющихся данных нет)\n\n# Объединим данные в один датасет -----------------------------------------------------\nclimate &lt;- rbind(obninsk, rp5_select)\nrm(obninsk, obninsk_temperature, obninsk_snow, rp5, rp5_select)\n\nwith_date &lt;- climate |&gt; \n  mutate(Date = make_date(Year, Month, Day)) # датафрейм с датами в формате дат,чтобы plot_ly смог построить интерактивный график\n\ninteractive_temperature_min_avg_max &lt;- function(df){\n  result &lt;- plot_ly(df, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Tmin, name = \"Tmin\") |&gt; \n  add_trace(x = ~Date, y = ~Tmax, name = \"Tmax\") |&gt;\n    add_trace(x = ~Date, y = ~Tavg, name = \"Tavg\") |&gt; \n  layout(showlegend = T, title='',\n         yaxis = list(title = 'Температура, \\u00B0C'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n  return(result)\n} # Функция для создания интерактивных графиков с тремя входными параметрами\n\n\nНа интерактивной карте (можно зуммировать, скроллить, а при наведении указателя мыши получить детальную информацию) четко видны выбросы и проблемы с летними месяцами (1966-1976гг)\n\n\nПоказать код\ninteractive_temperature_min_avg_max(with_date)"
  },
  {
    "objectID": "import_cleaning.html#очистка-измерений-суточного-разрешения-метеостанции-п.-бахта",
    "href": "import_cleaning.html#очистка-измерений-суточного-разрешения-метеостанции-п.-бахта",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Очистка измерений суточного разрешения метеостанции п. Бахта",
    "text": "Очистка измерений суточного разрешения метеостанции п. Бахта\nПропуски измерений в сырых данных:\n\n\n\nПараметр\nКоличество пропусков\n\n\n\n\nсредняя температура\n271\n\n\nглубина снежного покрова\n3391\n\n\nсумма осадков\n1458\n\n\n\n\nsummary(climate) \n\n      Year          Month            Day             Tmin        \n Min.   :1961   Min.   : 1.00   Min.   : 1.00   Min.   :-88.600  \n 1st Qu.:1976   1st Qu.: 4.00   1st Qu.: 8.00   1st Qu.:-20.100  \n Median :1992   Median : 7.00   Median :16.00   Median : -4.500  \n Mean   :1992   Mean   : 6.51   Mean   :15.72   Mean   : -8.108  \n 3rd Qu.:2007   3rd Qu.:10.00   3rd Qu.:23.00   3rd Qu.:  3.800  \n Max.   :2023   Max.   :12.00   Max.   :31.00   Max.   : 22.200  \n NA's   :1      NA's   :1       NA's   :1       NA's   :493      \n      Tavg             Tmax               Pr               Sn        \n Min.   :-54.40   Min.   :-51.000   Min.   :  0.00   Min.   :   0.0  \n 1st Qu.:-15.65   1st Qu.:-11.762   1st Qu.:  0.00   1st Qu.:   0.0  \n Median : -1.70   Median :  0.400   Median :  0.40   Median :  26.0  \n Mean   : -4.46   Mean   : -1.234   Mean   :  1.49   Mean   : 173.3  \n 3rd Qu.:  7.40   3rd Qu.: 10.488   3rd Qu.:  1.60   3rd Qu.:  53.0  \n Max.   : 28.40   Max.   : 35.000   Max.   :813.00   Max.   :9999.0  \n NA's   :271      NA's   :399       NA's   :1458     NA's   :3391    \n\naggr(climate, prop = F, numbers = T) # Визуализация количества пропущенных значений из пакета VIM\n\n\n\n\n\nЕсли глубина снежного покрова равна 9999.0, его надо заменить на NA\nУдалил снег в летние месяцы\nЕсли осадки NA, а снег и температура не пропущены, то, скорее всего, осадков не было (=0)\n\n\n\nПоказать код\nclimate$Sn[climate$Sn == 9999] = NA \nclimate$Sn[climate$Sn == \"NaN\"] =NA  \nclimate$Sn[is.na(climate$Sn)==T & climate$Month == 6 |\n            climate$Month == 7 |climate$Month == 8 ] = 0\n\nclimate$Pr[is.na(climate$Pr)==T & is.na(climate$Tavg)==F & is.na(climate$Sn) == F] = 0 \n\naggr(climate, prop = F, numbers = T) \n\n\n\n\n\nПропуски измерений в очищенных данных:\n\n\n\n\n\n\n\n\nПараметр\nКоличество пропусков\nУбрали за предыдущую манипуляцию\n\n\n\n\nсредняя температура\n271\n0\n\n\nглубина снежного покрова\n1849\n1542\n\n\nсумма осадков\n293\n1165\n\n\n\n\nsummary(climate)\n\n      Year          Month            Day             Tmin        \n Min.   :1961   Min.   : 1.00   Min.   : 1.00   Min.   :-88.600  \n 1st Qu.:1976   1st Qu.: 4.00   1st Qu.: 8.00   1st Qu.:-20.100  \n Median :1992   Median : 7.00   Median :16.00   Median : -4.500  \n Mean   :1992   Mean   : 6.51   Mean   :15.72   Mean   : -8.108  \n 3rd Qu.:2007   3rd Qu.:10.00   3rd Qu.:23.00   3rd Qu.:  3.800  \n Max.   :2023   Max.   :12.00   Max.   :31.00   Max.   : 22.200  \n NA's   :1      NA's   :1       NA's   :1       NA's   :493      \n      Tavg             Tmax               Pr                Sn       \n Min.   :-54.40   Min.   :-51.000   Min.   :  0.000   Min.   :  0.0  \n 1st Qu.:-15.65   1st Qu.:-11.762   1st Qu.:  0.000   1st Qu.:  0.0  \n Median : -1.70   Median :  0.400   Median :  0.300   Median : 17.0  \n Mean   : -4.46   Mean   : -1.234   Mean   :  1.413   Mean   : 26.1  \n 3rd Qu.:  7.40   3rd Qu.: 10.488   3rd Qu.:  1.500   3rd Qu.: 50.0  \n Max.   : 28.40   Max.   : 35.000   Max.   :813.000   Max.   :127.0  \n NA's   :271      NA's   :399       NA's   :293       NA's   :1849   \n\n\nОставшиеся пропуски удалим методом линейной интерполяции (замена с помощью уравнения линейной регрессии y = kx+b, функция na_interpolation из пакета imputeTS)\n\n\nПоказать код\nclimate$Tavg &lt;- na_interpolation(climate$Tavg)\nclimate$Pr &lt;- na_interpolation(climate$Pr)\nclimate$Sn &lt;- na_interpolation(climate$Sn)\n\nsummary(climate)\n\n\n      Year          Month            Day             Tmin        \n Min.   :1961   Min.   : 1.00   Min.   : 1.00   Min.   :-88.600  \n 1st Qu.:1976   1st Qu.: 4.00   1st Qu.: 8.00   1st Qu.:-20.100  \n Median :1992   Median : 7.00   Median :16.00   Median : -4.500  \n Mean   :1992   Mean   : 6.51   Mean   :15.72   Mean   : -8.108  \n 3rd Qu.:2007   3rd Qu.:10.00   3rd Qu.:23.00   3rd Qu.:  3.800  \n Max.   :2023   Max.   :12.00   Max.   :31.00   Max.   : 22.200  \n NA's   :1      NA's   :1       NA's   :1       NA's   :493      \n      Tavg              Tmax               Pr                Sn        \n Min.   :-54.400   Min.   :-51.000   Min.   :  0.000   Min.   :  0.00  \n 1st Qu.:-15.700   1st Qu.:-11.762   1st Qu.:  0.000   1st Qu.:  0.00  \n Median : -1.700   Median :  0.400   Median :  0.300   Median : 13.00  \n Mean   : -4.509   Mean   : -1.234   Mean   :  1.418   Mean   : 24.96  \n 3rd Qu.:  7.200   3rd Qu.: 10.488   3rd Qu.:  1.500   3rd Qu.: 49.00  \n Max.   : 28.400   Max.   : 35.000   Max.   :813.000   Max.   :127.00  \n                   NA's   :399                                         \n\n\nПоказать код\naggr(climate, prop = F, numbers = T)"
  },
  {
    "objectID": "import_cleaning.html#проверка-на-выбросы-измерений-суточного-разрешения-п.-бахта",
    "href": "import_cleaning.html#проверка-на-выбросы-измерений-суточного-разрешения-п.-бахта",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Проверка на выбросы измерений суточного разрешения п. Бахта",
    "text": "Проверка на выбросы измерений суточного разрешения п. Бахта\nСреднесуточные температуры: пропусков нет (очистили ранее), но есть проблемы с летними периодами в 1966-1976 годах.\n\n\nПоказать код\nBakhta &lt;- climate |&gt; \n  select(Year, Month, Day, Tavg, Pr, Sn) |&gt; \n  mutate(Date = make_date(Year, Month, Day)) # датафрейм с датами в формате дат,чтобы plot_ly смог построить интерактивный график\n\nplot_ly(Bakhta, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Tavg, name = \"Tavg\") |&gt; \n  layout(showlegend = T, title='Temperature',\n         xaxis = list(rangeslider = list(visible = T)))\n\n\n\n\n\n\nГрафик атмосферных осадков, видно выбросы\n\n\nПоказать код\nplot_ly(Bakhta, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Pr, name = \"Precipitation\") |&gt; \n  layout(showlegend = T, title='Precipitation',\n         xaxis = list(rangeslider = list(visible = T)))\n\n\n\n\n\n\nОчень сильные отклонения заменил осреднениями по соседним значениям\n\n\nПоказать код\nBakhta$Pr[Bakhta$Pr == 813] = 2\nBakhta$Pr[Bakhta$Pr == 204.3] = 3\nBakhta$Pr[Bakhta$Pr == 202] = 3\nplot_ly(Bakhta, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Pr, name = \"Precipitation\") |&gt; \n  layout(showlegend = T, title='Precipitation',\n         xaxis = list(rangeslider = list(visible = T)))\n\n\n\n\n\n\nГлубина снежного покрова\n\n\nПоказать код\nplot_ly(Bakhta, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Sn, name = \"Snow\") |&gt; \n  layout(showlegend = T, title='Snow',\n         xaxis = list(rangeslider = list(visible = T)))\n\n\n\n\n\n\nПропусков в необходимых измерениях больше нет\n\n\nПоказать код\naggr(climate, prop = F, numbers = T)\n\n\n\n\n\nПоказать код\n#write.csv2(Bakhta, \"data/cleaned/Bakhta_daily_attention1966-1976(problems_with_summer).csv\")"
  },
  {
    "objectID": "import_cleaning.html#расчёт-среднемесячных-показателей-для-метеостанции-п.-бахта-1966-1976гг-пока-с-исходными-данными",
    "href": "import_cleaning.html#расчёт-среднемесячных-показателей-для-метеостанции-п.-бахта-1966-1976гг-пока-с-исходными-данными",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Расчёт среднемесячных показателей для метеостанции п. Бахта (1966-1976гг пока с исходными данными)",
    "text": "Расчёт среднемесячных показателей для метеостанции п. Бахта (1966-1976гг пока с исходными данными)\n\n\nПоказать код\nBakhta &lt;- read.csv2(\"../data/cleaned/Bakhta_daily_attention1966-1976(problems_with_summer).csv\")\n\nBakhta_monthly &lt;- Bakhta |&gt; \n  group_by(Year, Month) |&gt; \n  summarise(Tavg = mean(Tavg),\n            Sn = mean(Sn),\n            Pr = mean(Pr)) |&gt; \n  mutate(Date = make_date(Year, Month))\n\n\nСреднемесячные температуры приземного воздуха метеостанция п. Бахта\n\n\nПоказать код\nplot_ly(Bakhta_monthly, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Tavg, name = \"Tavg\") |&gt; \n  layout(showlegend = T, title='Temperature',\n         xaxis = list(rangeslider = list(visible = T)))"
  },
  {
    "objectID": "import_cleaning.html#замена-пропущенных-значений-летних-температур-1966-1976",
    "href": "import_cleaning.html#замена-пропущенных-значений-летних-температур-1966-1976",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Замена пропущенных значений летних температур 1966-1976",
    "text": "Замена пропущенных значений летних температур 1966-1976\nПоскольку летние температуры 1966-1976гг ошибочные, их необходимо заменить. Ближайшие к Бахте метеостанции расположены в п. Бор (на 110 км южнее) и в п. Верхнеимбатск (94 км севернее).\nЗагрузим данные суточного разрешения для этих метеостанций:\n\n\nПоказать код\nBor_daily &lt;- read_table(\"../data/daily/Bor_daily.txt\", col_names = F) |&gt; \n  select(Station = X1,\n         Year = X2,\n         Month = X3,\n         Day = X4,\n         Tmin = X6,\n         Tavg = X7,\n         Tmax = X8,\n         Pr = X9) |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\nVerkhneimbatsk_daily &lt;- read_table(\"../data/daily/Verkhneimbatsk_daily.txt\", col_names = F) |&gt; \n  select(Station = X1,\n         Year = X2,\n         Month = X3,\n         Day = X4,\n         Tmin = X6,\n         Tavg = X7,\n         Tmax = X8,\n         Pr = X9) |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\n\nГрафик суточных температур по данным метеостанции п. Бор\n\n\nПоказать код\ninteractive_temperature_min_avg_max(Bor_daily)\n\n\n\n\n\n\nГрафик суточных температур по данным метеостанции п. Верхнеимбатск\n\n\nПоказать код\ninteractive_temperature_min_avg_max(Verkhneimbatsk_daily)\n\n\n\n\n\n\nПо обеим метеостанциям большие проблемы с суточными измерениями\nЗагрузим данные месячного разрешения из этих же поселков\n\n\nПоказать код\n# Бор и Верхнеимбатск месячные данные -------------------------------------\nBor_monthly &lt;- read_delim(\"../data/monthly/Bor_monthly.txt\", col_names = F,\n                          delim = \";\" , col_types = \"n\") |&gt; \n  mutate_all(as.numeric) |&gt; \n  select(Station = X1,\n         Year = X2,\n         \"1\" = X3,\n         \"2\" = X4,\n         \"3\" = X5,\n         \"4\" = X6,\n         \"5\" = X7,\n         \"6\" = X8,\n         \"7\" = X9,\n         \"8\" = X10,\n         \"9\" = X11,\n         \"10\" = X12,\n         \"11\" = X13,\n         \"12\" = X14) |&gt; \n  pivot_longer(cols = -c(Station, Year), names_to = \"Month\", values_to = \"Tavg\") |&gt; \n  mutate(Day = \"1\") |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\n\nVerkhneimbatsk_monthly &lt;- read_delim(\"../data/monthly/Verkhneimbatsk_monthly.txt\", col_names = F,\n                                     delim = \";\" , col_types = \"n\") |&gt; \n  mutate_all(as.numeric) |&gt; \n  select(Station = X1,\n         Year = X2,\n         \"1\" = X3,\n         \"2\" = X4,\n         \"3\" = X5,\n         \"4\" = X6,\n         \"5\" = X7,\n         \"6\" = X8,\n         \"7\" = X9,\n         \"8\" = X10,\n         \"9\" = X11,\n         \"10\" = X12,\n         \"11\" = X13,\n         \"12\" = X14) |&gt; \n  pivot_longer(cols = -c(Station, Year), names_to = \"Month\", values_to = \"Tavg\") |&gt; \n  mutate(Day = \"1\") |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\n\nГрафик температур (месячное разрешение) по данным метеостанции п. Бор\n\n\nПоказать код\nplot_ly(Bor_monthly, type = 'scatter', mode = 'lines')%&gt;%\n  add_trace(x = ~Date, y = ~Tavg)%&gt;%\n  layout(showlegend = F, title='Месячные температуры в Бору',\n         xaxis = list(rangeslider = list(visible = T)))\n\n\n\n\n\n\nГрафик суточных температур по данным метеостанции п. Верхнеимбатск\n\n\nПоказать код\nplot_ly(Verkhneimbatsk_monthly, type = 'scatter', mode = 'lines')%&gt;%\n  add_trace(x = ~Date, y = ~Tavg)%&gt;%\n  layout(showlegend = F, title='Месячные температуры в Верхнеимбатске',\n         xaxis = list(rangeslider = list(visible = T)))\n\n\n\n\n\n\nна первый взгляд, с этими данными гораздо меньше проблем, будем работать с ними."
  },
  {
    "objectID": "import_cleaning.html#оценка-корреляции-между-временными-рядами-измерений-температуры-приземного-воздуха-суточное-разрешение-трех-метеостанций",
    "href": "import_cleaning.html#оценка-корреляции-между-временными-рядами-измерений-температуры-приземного-воздуха-суточное-разрешение-трех-метеостанций",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Оценка корреляции между временными рядами измерений температуры приземного воздуха (суточное разрешение) трех метеостанций",
    "text": "Оценка корреляции между временными рядами измерений температуры приземного воздуха (суточное разрешение) трех метеостанций\nОбъединим данные со всех трех метеостанций и поместим в один датасет, после чего проверим на пропуски. Видим, что пропуски есть.\n\n\nПоказать код\nBor_Verkhn &lt;- Bor_monthly |&gt; \n  left_join(Verkhneimbatsk_monthly, by = c(\"Year\", \"Month\")) |&gt; \n  select(Year, Month, Bor_tavg = Tavg.x, Verkhn_tavg = Tavg.y) |&gt; \n  mutate(Year = as.integer(Year),\n         Month = as.integer(Month))\n\nBakhta_Bor_Verkhneimbatsk &lt;- Bakhta_monthly |&gt; \n  left_join(Bor_Verkhn, by = c(\"Year\", \"Month\")) |&gt; \n  mutate(Date = make_date(Year, Month)) |&gt; \n  ungroup() |&gt; \n  select(Date,Bakhta_tavg = Tavg, Bor_tavg, Verkhn_tavg) |&gt; \n  filter(!is.na(Date)) |&gt; \n  as.data.frame()\naggr(Bakhta_Bor_Verkhneimbatsk, prop = F, numbers = T) # \n\n\n\n\n\nОчистим пропуски методом простой линейной интерполяции\n\nBakhta_Bor_Verkhneimbatsk$Bor_tavg &lt;- na_interpolation(Bakhta_Bor_Verkhneimbatsk$Bor_tavg)\nBakhta_Bor_Verkhneimbatsk$Verkhn_tavg &lt;- na_interpolation(Bakhta_Bor_Verkhneimbatsk$Verkhn_tavg)\naggr(Bakhta_Bor_Verkhneimbatsk, prop = F, numbers = T) #Пропусков нет\n\n\n\n\nЗапустим кросс-вейвлет преобразование для оценки корреляции между временными рядами.\n\n\nПоказать код\nBakhta_Bor_cross &lt;- analyze.coherency(Bakhta_Bor_Verkhneimbatsk, c(\"Bakhta_tavg\", \"Bor_tavg\"), verbose = F)\nBakhta_Verkhn_cross &lt;- analyze.coherency(Bakhta_Bor_Verkhneimbatsk, c(\"Bakhta_tavg\", \"Verkhn_tavg\"), verbose = F)\nVerkhn_Bor_cross &lt;- analyze.coherency(Bakhta_Bor_Verkhneimbatsk, c(\"Verkhn_tavg\", \"Bor_tavg\") , verbose = F)\n\n\nПостроим спектрограммы проведенного анализа\n\n\nПоказать код\nwc.image(Bakhta_Bor_cross, which.image=\"wp\", timelab=\"time (month)\", periodlab=\"period (Month)\", \n         main=\"Кросс-вейвлет Бор-Бахта\", \n         plot.arrow = F,\n         show.date = T,\n         legend.params=list(lab=\"wavelet power-spectrum levels\", lab.line=3.5, label.digits=3))\n\n\nWarning in wc.image(Bakhta_Bor_cross, which.image = \"wp\", timelab = \"time (month)\", : \nPlease check your calendar dates, format and time zone: dates may not be in an unambiguous format or chronological. The default numerical axis was used instead.\n\n\n\n\n\nПоказать код\nwc.image(Bakhta_Verkhn_cross, which.image=\"wp\", timelab=\"time (month)\", periodlab=\"period (Month)\", \n         main=\"Кросс-вейвлет Бахта-Верхнеимбатск\", \n         plot.arrow = F,\n         show.date = T,\n         legend.params=list(lab=\"wavelet power-spectrum levels\", lab.line=3.5, label.digits=3))\n\n\nWarning in wc.image(Bakhta_Verkhn_cross, which.image = \"wp\", timelab = \"time (month)\", : \nPlease check your calendar dates, format and time zone: dates may not be in an unambiguous format or chronological. The default numerical axis was used instead.\n\n\n\n\n\nПоказать код\nwc.image(Bakhta_Verkhn_cross, which.image=\"wp\", timelab=\"time (month)\", periodlab=\"period (Month)\", \n         main=\"Кросс-вейвлет Бор-Верхнеимбатск\", \n         plot.arrow = F,\n         show.date = T,\n         legend.params=list(lab=\"wavelet power-spectrum levels\", lab.line=3.5, label.digits=3))\n\n\nWarning in wc.image(Bakhta_Verkhn_cross, which.image = \"wp\", timelab = \"time (month)\", : \nPlease check your calendar dates, format and time zone: dates may not be in an unambiguous format or chronological. The default numerical axis was used instead."
  },
  {
    "objectID": "import_cleaning.html#замена-некорректных-значений-температур-в-п.-бахта",
    "href": "import_cleaning.html#замена-некорректных-значений-температур-в-п.-бахта",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Замена некорректных значений температур в п. Бахта",
    "text": "Замена некорректных значений температур в п. Бахта\nТаким образом, все 3 временных ряда сильно коррелируют между собой. Заменим ошибочные значения темератур (лето 1966-1976гг) в п. Бахта осредненными значениями, полученными с метеостанций п. Бор и Верхнеимбатск\n\n\nПоказать код\nBor_Verkhn &lt;- Bor_monthly |&gt; \n  left_join(Verkhneimbatsk_monthly, by = c(\"Year\", \"Month\")) |&gt; \n  select(Year, Month, Bor_tavg = Tavg.x, Verkhn_tavg = Tavg.y) |&gt; \n  filter(Year %in% c(1966:1976), Month %in% c(6:8)) |&gt; \n  group_by(Year, Month) |&gt; \n  summarise(Tavg = mean(Bor_tavg, Verkhn_tavg)) |&gt; \n  mutate(Year = as.integer(Year),\n         Month = as.integer(Month))\n\nBakhta_monthly_new &lt;- Bakhta_monthly |&gt; \n  left_join(Bor_Verkhn, by = c(\"Year\", \"Month\")) |&gt; \n  mutate(Tavg = ifelse(is.na(Tavg.y) == F, Tavg.y, Tavg.x)) |&gt; \n  select(Year, Month, Tavg, Sn, Pr, Date)\n\n\nГрафик среднемесячных температур в п. Бахта (исходные данные)\n\n\nПоказать код\nplot_ly(Bakhta_monthly, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Tavg, name = \"Tavg\") |&gt; \n  layout(showlegend = T, title='Temperature',\n        xaxis = list(rangeslider = list(visible = T)))\n\n\n\n\n\n\nГрафик среднемесячных температур в Бахте (1966-1976гг 6-8 мес заменены на осредненные из Бора и Верхнеимбатска)\n\n\nПоказать код\nplot_ly(Bakhta_monthly_new, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Tavg, name = \"Tavg\") |&gt; \n  layout(showlegend = T, title='Temperature',\n         xaxis = list(rangeslider = list(visible = T)))\n\n\n\n\n\n\nПоказать код\n#write.csv2(Bakhta_monthly_new, \"data/cleaned/Bakhta_monthly_1966-1976_replaced_by_average_Bor_Verkhn.csv\")"
  },
  {
    "objectID": "norms_anomalies.html",
    "href": "norms_anomalies.html",
    "title": "Исходный код: расчёт климатических норм и аномалий",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "norms_anomalies.html#quarto",
    "href": "norms_anomalies.html#quarto",
    "title": "Исходный код: расчёт климатических норм и аномалий",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "norms_anomalies.html#running-code",
    "href": "norms_anomalies.html#running-code",
    "title": "Исходный код: расчёт климатических норм и аномалий",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "import_cleaning.html#очистка-измерений-суточное-разрешение-п.-бахта",
    "href": "import_cleaning.html#очистка-измерений-суточное-разрешение-п.-бахта",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Очистка измерений (суточное разрешение, п. Бахта)",
    "text": "Очистка измерений (суточное разрешение, п. Бахта)\nПропуски измерений в сырых данных:\n\n\n\nПараметр\nКоличество пропусков\n\n\n\n\nсредняя температура\n271\n\n\nглубина снежного покрова\n3391\n\n\nсумма осадков\n1458\n\n\n\n\nsummary(climate) \n\n      Year          Month            Day             Tmin        \n Min.   :1961   Min.   : 1.00   Min.   : 1.00   Min.   :-88.600  \n 1st Qu.:1976   1st Qu.: 4.00   1st Qu.: 8.00   1st Qu.:-20.100  \n Median :1992   Median : 7.00   Median :16.00   Median : -4.500  \n Mean   :1992   Mean   : 6.51   Mean   :15.72   Mean   : -8.108  \n 3rd Qu.:2007   3rd Qu.:10.00   3rd Qu.:23.00   3rd Qu.:  3.800  \n Max.   :2023   Max.   :12.00   Max.   :31.00   Max.   : 22.200  \n NA's   :1      NA's   :1       NA's   :1       NA's   :493      \n      Tavg             Tmax               Pr               Sn        \n Min.   :-54.40   Min.   :-51.000   Min.   :  0.00   Min.   :   0.0  \n 1st Qu.:-15.65   1st Qu.:-11.762   1st Qu.:  0.00   1st Qu.:   0.0  \n Median : -1.70   Median :  0.400   Median :  0.40   Median :  26.0  \n Mean   : -4.46   Mean   : -1.234   Mean   :  1.49   Mean   : 173.3  \n 3rd Qu.:  7.40   3rd Qu.: 10.488   3rd Qu.:  1.60   3rd Qu.:  53.0  \n Max.   : 28.40   Max.   : 35.000   Max.   :813.00   Max.   :9999.0  \n NA's   :271      NA's   :399       NA's   :1458     NA's   :3391    \n\naggr(climate, prop = F, numbers = T) # Визуализация количества пропущенных значений из пакета VIM\n\n\n\n\n\nЕсли глубина снежного покрова равна 9999.0, его надо заменить на NA\nУдалил снег в летние месяцы\nЕсли осадки NA, а снег и температура не пропущены, то, скорее всего, осадков не было (=0)\n\n\n\nПоказать код\nclimate$Sn[climate$Sn == 9999] = NA \nclimate$Sn[climate$Sn == \"NaN\"] =NA  \nclimate$Sn[is.na(climate$Sn)==T & climate$Month == 6 |\n            climate$Month == 7 |climate$Month == 8 ] = 0\n\nclimate$Pr[is.na(climate$Pr)==T & is.na(climate$Tavg)==F & is.na(climate$Sn) == F] = 0 \n\naggr(climate, prop = F, numbers = T) \n\n\n\n\n\nПропуски измерений в очищенных данных:\n\n\n\n\n\n\n\n\nПараметр\nКоличество пропусков\nУбрали за предыдущую манипуляцию\n\n\n\n\nсредняя температура\n271\n0\n\n\nглубина снежного покрова\n1849\n1542\n\n\nсумма осадков\n293\n1165\n\n\n\n\nsummary(climate)\n\n      Year          Month            Day             Tmin        \n Min.   :1961   Min.   : 1.00   Min.   : 1.00   Min.   :-88.600  \n 1st Qu.:1976   1st Qu.: 4.00   1st Qu.: 8.00   1st Qu.:-20.100  \n Median :1992   Median : 7.00   Median :16.00   Median : -4.500  \n Mean   :1992   Mean   : 6.51   Mean   :15.72   Mean   : -8.108  \n 3rd Qu.:2007   3rd Qu.:10.00   3rd Qu.:23.00   3rd Qu.:  3.800  \n Max.   :2023   Max.   :12.00   Max.   :31.00   Max.   : 22.200  \n NA's   :1      NA's   :1       NA's   :1       NA's   :493      \n      Tavg             Tmax               Pr                Sn       \n Min.   :-54.40   Min.   :-51.000   Min.   :  0.000   Min.   :  0.0  \n 1st Qu.:-15.65   1st Qu.:-11.762   1st Qu.:  0.000   1st Qu.:  0.0  \n Median : -1.70   Median :  0.400   Median :  0.300   Median : 17.0  \n Mean   : -4.46   Mean   : -1.234   Mean   :  1.413   Mean   : 26.1  \n 3rd Qu.:  7.40   3rd Qu.: 10.488   3rd Qu.:  1.500   3rd Qu.: 50.0  \n Max.   : 28.40   Max.   : 35.000   Max.   :813.000   Max.   :127.0  \n NA's   :271      NA's   :399       NA's   :293       NA's   :1849   \n\n\nОставшиеся пропуски удалим методом линейной интерполяции (замена с помощью уравнения линейной регрессии y = kx+b, функция na_interpolation из пакета imputeTS)\n\n\nПоказать код\nclimate$Tavg &lt;- na_interpolation(climate$Tavg)\nclimate$Pr &lt;- na_interpolation(climate$Pr)\nclimate$Sn &lt;- na_interpolation(climate$Sn)\n\nsummary(climate)\n\n\n      Year          Month            Day             Tmin        \n Min.   :1961   Min.   : 1.00   Min.   : 1.00   Min.   :-88.600  \n 1st Qu.:1976   1st Qu.: 4.00   1st Qu.: 8.00   1st Qu.:-20.100  \n Median :1992   Median : 7.00   Median :16.00   Median : -4.500  \n Mean   :1992   Mean   : 6.51   Mean   :15.72   Mean   : -8.108  \n 3rd Qu.:2007   3rd Qu.:10.00   3rd Qu.:23.00   3rd Qu.:  3.800  \n Max.   :2023   Max.   :12.00   Max.   :31.00   Max.   : 22.200  \n NA's   :1      NA's   :1       NA's   :1       NA's   :493      \n      Tavg              Tmax               Pr                Sn        \n Min.   :-54.400   Min.   :-51.000   Min.   :  0.000   Min.   :  0.00  \n 1st Qu.:-15.700   1st Qu.:-11.762   1st Qu.:  0.000   1st Qu.:  0.00  \n Median : -1.700   Median :  0.400   Median :  0.300   Median : 13.00  \n Mean   : -4.509   Mean   : -1.234   Mean   :  1.418   Mean   : 24.96  \n 3rd Qu.:  7.200   3rd Qu.: 10.488   3rd Qu.:  1.500   3rd Qu.: 49.00  \n Max.   : 28.400   Max.   : 35.000   Max.   :813.000   Max.   :127.00  \n                   NA's   :399                                         \n\n\nПоказать код\naggr(climate, prop = F, numbers = T)\n\n\n\n\n\n\nПроверка на выбросы\nСреднесуточные температуры: пропусков нет (очистили ранее), но есть проблемы с летними периодами в 1966-1976 годах.\n\n\nПоказать код\nBakhta &lt;- climate |&gt; \n  select(Year, Month, Day, Tavg, Pr, Sn) |&gt; \n  mutate(Date = make_date(Year, Month, Day)) # датафрейм с датами в формате дат,чтобы plot_ly смог построить интерактивный график\n\nplot_ly(Bakhta, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Tavg, name = \"Tavg\") |&gt; \n  layout(showlegend = F, title='',\n         yaxis = list(title = 'Температура, \\u00B0C'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\nГрафик атмосферных осадков, видно выбросы\n\n\nПоказать код\nplot_ly(Bakhta, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Pr, name = \"Precipitation\") |&gt; \n  layout(showlegend = F, title='',\n         yaxis = list(title = 'Осадки, мм'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\nОчень сильные отклонения заменил осреднениями по соседним значениям\n\n\nПоказать код\nBakhta$Pr[Bakhta$Pr == 813] = 2\nBakhta$Pr[Bakhta$Pr == 204.3] = 3\nBakhta$Pr[Bakhta$Pr == 202] = 3\nplot_ly(Bakhta, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Pr, name = \"Precipitation\") |&gt; \n  layout(showlegend = F, title='',\n         yaxis = list(title = 'Осадки, мм'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\nГлубина снежного покрова\n\n\nПоказать код\nplot_ly(Bakhta, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Sn, name = \"Snow\") |&gt; \n  layout(showlegend = T, title='',\n         yaxis = list(title = 'Глубина снежного покрова, см'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\nПропусков в необходимых измерениях больше нет\n\n\nПоказать код\naggr(climate, prop = F, numbers = T)\n\n\n\n\n\nПоказать код\n#write.csv2(Bakhta, \"data/cleaned/Bakhta_daily_attention1966-1976(problems_with_summer).csv\")\n\n\n\n\nРасчёт среднемесячных показателей (п. Бахта)\n\n\nПоказать код\nBakhta &lt;- read.csv2(\"../data/cleaned/Bakhta_daily_attention1966-1976(problems_with_summer).csv\")\n\nBakhta_monthly &lt;- Bakhta |&gt; \n  group_by(Year, Month) |&gt; \n  summarise(Tavg = mean(Tavg),\n            Sn = mean(Sn),\n            Pr = sum(Pr)) |&gt; #Накопленное за месяц количество осадков\n  mutate(Date = make_date(Year, Month))\n\n\n\nСреднемесячные температуры приземного воздуха (метеостанция п.Бахта)\n\n\nПоказать код\nplot_ly(Bakhta_monthly, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Tavg, name = \"Tavg\") |&gt; \n  layout(showlegend = F, title='',\n         yaxis = list(title = 'Температура, \\u00B0C'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\n\n\nСреднемесячная глубина снежного покрова (метеостанция п.Бахта)\n\n\nПоказать код\nplot_ly(Bakhta_monthly, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Sn, name = \"Snow\") |&gt; \n  layout(showlegend = F, title='',\n         yaxis = list(title = 'Глубина снежного покрова, см'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\n\n\nМесячная сумма осадков (метеостанция п.Бахта)\n\n\nПоказать код\nplot_ly(Bakhta_monthly, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Pr, name = \"Pr\") |&gt; \n  layout(showlegend = F, title='',\n         yaxis = list(title = 'Осадки, мм'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\n\n\n\nЗамена пропущенных значений летних температур (1966-1976гг)\nПоскольку летние температуры 1966-1976гг некорректные, их необходимо заменить. Ближайшие к Бахте метеостанции расположены в п. Бор (на 110 км южнее) и в п. Верхнеимбатск (94 км севернее).\nЗагрузим данные суточного разрешения для этих метеостанций:\n\n\nПоказать код\nBor_daily &lt;- read_table(\"../data/daily/Bor_daily.txt\", col_names = F) |&gt; \n  select(Station = X1,\n         Year = X2,\n         Month = X3,\n         Day = X4,\n         Tmin = X6,\n         Tavg = X7,\n         Tmax = X8,\n         Pr = X9) |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\nVerkhneimbatsk_daily &lt;- read_table(\"../data/daily/Verkhneimbatsk_daily.txt\", col_names = F) |&gt; \n  select(Station = X1,\n         Year = X2,\n         Month = X3,\n         Day = X4,\n         Tmin = X6,\n         Tavg = X7,\n         Tmax = X8,\n         Pr = X9) |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\n\n\nГрафик температур (суточное разрешение) по данным метеостанции п.Бор\n\n\nПоказать код\ninteractive_temperature_min_avg_max(Bor_daily)\n\n\n\n\n\n\n####График температур (суточное разрешение) по данным метеостанции п.Верхнеимбатск\n\n\nПоказать код\ninteractive_temperature_min_avg_max(Verkhneimbatsk_daily)\n\n\n\n\n\n\nПо обеим метеостанциям большие проблемы с суточными измерениями\nЗагрузим данные месячного разрешения из этих же поселков\n\n\nПоказать код\n# Бор и Верхнеимбатск месячные данные -------------------------------------\nBor_monthly &lt;- read_delim(\"../data/monthly/Bor_monthly.txt\", col_names = F,\n                          delim = \";\" , col_types = \"n\") |&gt; \n  mutate_all(as.numeric) |&gt; \n  select(Station = X1,\n         Year = X2,\n         \"1\" = X3,\n         \"2\" = X4,\n         \"3\" = X5,\n         \"4\" = X6,\n         \"5\" = X7,\n         \"6\" = X8,\n         \"7\" = X9,\n         \"8\" = X10,\n         \"9\" = X11,\n         \"10\" = X12,\n         \"11\" = X13,\n         \"12\" = X14) |&gt; \n  pivot_longer(cols = -c(Station, Year), names_to = \"Month\", values_to = \"Tavg\") |&gt; \n  mutate(Day = \"1\") |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\n\nVerkhneimbatsk_monthly &lt;- read_delim(\"../data/monthly/Verkhneimbatsk_monthly.txt\", col_names = F,\n                                     delim = \";\" , col_types = \"n\") |&gt; \n  mutate_all(as.numeric) |&gt; \n  select(Station = X1,\n         Year = X2,\n         \"1\" = X3,\n         \"2\" = X4,\n         \"3\" = X5,\n         \"4\" = X6,\n         \"5\" = X7,\n         \"6\" = X8,\n         \"7\" = X9,\n         \"8\" = X10,\n         \"9\" = X11,\n         \"10\" = X12,\n         \"11\" = X13,\n         \"12\" = X14) |&gt; \n  pivot_longer(cols = -c(Station, Year), names_to = \"Month\", values_to = \"Tavg\") |&gt; \n  mutate(Day = \"1\") |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\n\n####График температур (месячное разрешение) по данным метеостанции п.Бор\n\n\nПоказать код\nplot_ly(Bor_monthly, type = 'scatter', mode = 'lines')%&gt;%\n  add_trace(x = ~Date, y = ~Tavg)%&gt;%\n  layout(showlegend = F, title='',\n         yaxis = list(title = 'Температура, \\u00B0C'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\n####График температур (месячное разрешение) по данным метеостанции п.Верхнеимбатск\n\n\nПоказать код\nplot_ly(Verkhneimbatsk_monthly, type = 'scatter', mode = 'lines')%&gt;%\n  add_trace(x = ~Date, y = ~Tavg)%&gt;%\n  layout(showlegend = F, title='',\n         yaxis = list(title = 'Температура, \\u00B0C'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\nна первый взгляд, с этими данными гораздо меньше проблем, будем работать с ними.\n\n\n\nОценка корреляции между временными рядами (t приземного воздуха, месячное разрешение) трех метеостанций\nОбъединим данные со всех трех метеостанций и поместим в один датасет, после чего проверим на пропуски. Видим, что пропуски есть.\n\n\nПоказать код\nBor_Verkhn &lt;- Bor_monthly |&gt; \n  left_join(Verkhneimbatsk_monthly, by = c(\"Year\", \"Month\")) |&gt; \n  select(Year, Month, Bor_tavg = Tavg.x, Verkhn_tavg = Tavg.y) |&gt; \n  mutate(Year = as.integer(Year),\n         Month = as.integer(Month))\n\nBakhta_Bor_Verkhneimbatsk &lt;- Bakhta_monthly |&gt; \n  left_join(Bor_Verkhn, by = c(\"Year\", \"Month\")) |&gt; \n  mutate(Date = make_date(Year, Month)) |&gt; \n  ungroup() |&gt; \n  select(Date,Bakhta_tavg = Tavg, Bor_tavg, Verkhn_tavg) |&gt; \n  filter(!is.na(Date)) |&gt; \n  as.data.frame()\naggr(Bakhta_Bor_Verkhneimbatsk, prop = F, numbers = T) # \n\n\n\n\n\nОчистим пропуски методом простой линейной интерполяции\n\nBakhta_Bor_Verkhneimbatsk$Bor_tavg &lt;- na_interpolation(Bakhta_Bor_Verkhneimbatsk$Bor_tavg)\nBakhta_Bor_Verkhneimbatsk$Verkhn_tavg &lt;- na_interpolation(Bakhta_Bor_Verkhneimbatsk$Verkhn_tavg)\naggr(Bakhta_Bor_Verkhneimbatsk, prop = F, numbers = T) #Пропусков нет\n\n\n\n\nЗапустим кросс-вейвлет преобразование для оценки корреляции между временными рядами.\n\n\nПоказать код\nBakhta_Bor_cross &lt;- analyze.coherency(Bakhta_Bor_Verkhneimbatsk, c(\"Bakhta_tavg\", \"Bor_tavg\"), verbose = F)\nBakhta_Verkhn_cross &lt;- analyze.coherency(Bakhta_Bor_Verkhneimbatsk, c(\"Bakhta_tavg\", \"Verkhn_tavg\"), verbose = F)\nVerkhn_Bor_cross &lt;- analyze.coherency(Bakhta_Bor_Verkhneimbatsk, c(\"Verkhn_tavg\", \"Bor_tavg\") , verbose = F)\n\n\n\nСпектрограммы кросс-вейвлет преобразования\n\n\nПоказать код\nwc.image(Bakhta_Bor_cross, which.image=\"wp\", timelab=\"время (количество месяцев)\", periodlab=\"период (месяцев)\", \n         main=\"Кросс-вейвлет Бор-Бахта\", \n         plot.arrow = F,\n         legend.params=list(lab=\"wavelet power-spectrum levels\", lab.line=3.5, label.digits=3))\n\n\n\n\n\nПоказать код\nwc.image(Bakhta_Verkhn_cross, which.image=\"wp\", timelab=\"время (количество месяцев)\", periodlab=\"период (месяцев)\", \n         main=\"Кросс-вейвлет Бахта-Верхнеимбатск\", \n         plot.arrow = F,\n         legend.params=list(lab=\"wavelet power-spectrum levels\", lab.line=3.5, label.digits=3))\n\n\n\n\n\nПоказать код\nwc.image(Bakhta_Verkhn_cross, which.image=\"wp\", timelab=\"время (количество месяцев)\", periodlab=\"период (месяцев)\", \n         main=\"Кросс-вейвлет Бор-Верхнеимбатск\", \n         plot.arrow = F,\n         legend.params=list(lab=\"wavelet power-spectrum levels\", lab.line=3.5, label.digits=3))\n\n\n\n\n\n\n\n\nЗамена некорректных значений осредненными\nТаким образом, все 3 временных ряда сильно коррелируют между собой. Заменим ошибочные значения темератур (лето 1966-1976гг) в п. Бахта осредненными значениями, полученными с метеостанций п. Бор и Верхнеимбатск\n\n\nПоказать код\nBor_Verkhn &lt;- Bor_monthly |&gt; \n  left_join(Verkhneimbatsk_monthly, by = c(\"Year\", \"Month\")) |&gt; \n  select(Year, Month, Bor_tavg = Tavg.x, Verkhn_tavg = Tavg.y) |&gt; \n  filter(Year %in% c(1966:1976), Month %in% c(6:8)) |&gt; \n  group_by(Year, Month) |&gt; \n  summarise(Tavg = mean(Bor_tavg, Verkhn_tavg)) |&gt; \n  mutate(Year = as.integer(Year),\n         Month = as.integer(Month))\n\nBakhta_monthly_new &lt;- Bakhta_monthly |&gt; \n  left_join(Bor_Verkhn, by = c(\"Year\", \"Month\")) |&gt; \n  mutate(Tavg = ifelse(is.na(Tavg.y) == F, Tavg.y, Tavg.x)) |&gt; \n  select(Year, Month, Tavg, Sn, Pr, Date)\n\n\n\nРезультат\nГрафик среднемесячных температур в п. Бахта (исходные данные)\n\n\nПоказать код\nplot_ly(Bakhta_monthly, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Tavg, name = \"Tavg\") |&gt; \n  layout(showlegend = T, title='',\n        yaxis = list(title = 'Температура, \\u00B0C'),\n        xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\nГрафик среднемесячных температур в Бахте (1966-1976гг 6-8 мес заменены на осредненные из Бора и Верхнеимбатска)\n\n\nПоказать код\nplot_ly(Bakhta_monthly_new, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Tavg, name = \"Tavg\") |&gt; \n  layout(showlegend = T, title='',\n         yaxis = list(title = 'Температура, \\u00B0C'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\nПоказать код\n#write.csv2(Bakhta_monthly_new, \"data/cleaned/Bakhta_monthly_1966-1976_replaced_by_average_Bor_Verkhn.csv\")"
  },
  {
    "objectID": "import_cleaning.html#замена-пропущенных-значений-летних-температур-1966-1976гг",
    "href": "import_cleaning.html#замена-пропущенных-значений-летних-температур-1966-1976гг",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Замена пропущенных значений летних температур (1966-1976гг)",
    "text": "Замена пропущенных значений летних температур (1966-1976гг)\nПоскольку летние температуры 1966-1976гг некорректные, их необходимо заменить. Ближайшие к Бахте метеостанции расположены в п. Бор (на 110 км южнее) и в п. Верхнеимбатск (94 км севернее).\nЗагрузим данные суточного разрешения для этих метеостанций:\n\n\nПоказать код\nBor_daily &lt;- read_table(\"../data/daily/Bor_daily.txt\", col_names = F) |&gt; \n  select(Station = X1,\n         Year = X2,\n         Month = X3,\n         Day = X4,\n         Tmin = X6,\n         Tavg = X7,\n         Tmax = X8,\n         Pr = X9) |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\nVerkhneimbatsk_daily &lt;- read_table(\"../data/daily/Verkhneimbatsk_daily.txt\", col_names = F) |&gt; \n  select(Station = X1,\n         Year = X2,\n         Month = X3,\n         Day = X4,\n         Tmin = X6,\n         Tavg = X7,\n         Tmax = X8,\n         Pr = X9) |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\n\n\nГрафик температур (суточное разрешение) по данным метеостанции п.Бор\n\n\nПоказать код\ninteractive_temperature_min_avg_max(Bor_daily)\n\n\n\n\n\n\n####График температур (суточное разрешение) по данным метеостанции п.Верхнеимбатск\n\n\nПоказать код\ninteractive_temperature_min_avg_max(Verkhneimbatsk_daily)\n\n\n\n\n\n\nПо обеим метеостанциям большие проблемы с суточными измерениями\nЗагрузим данные месячного разрешения из этих же поселков\n\n\nПоказать код\n# Бор и Верхнеимбатск месячные данные -------------------------------------\nBor_monthly &lt;- read_delim(\"../data/monthly/Bor_monthly.txt\", col_names = F,\n                          delim = \";\" , col_types = \"n\") |&gt; \n  mutate_all(as.numeric) |&gt; \n  select(Station = X1,\n         Year = X2,\n         \"1\" = X3,\n         \"2\" = X4,\n         \"3\" = X5,\n         \"4\" = X6,\n         \"5\" = X7,\n         \"6\" = X8,\n         \"7\" = X9,\n         \"8\" = X10,\n         \"9\" = X11,\n         \"10\" = X12,\n         \"11\" = X13,\n         \"12\" = X14) |&gt; \n  pivot_longer(cols = -c(Station, Year), names_to = \"Month\", values_to = \"Tavg\") |&gt; \n  mutate(Day = \"1\") |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\n\nVerkhneimbatsk_monthly &lt;- read_delim(\"../data/monthly/Verkhneimbatsk_monthly.txt\", col_names = F,\n                                     delim = \";\" , col_types = \"n\") |&gt; \n  mutate_all(as.numeric) |&gt; \n  select(Station = X1,\n         Year = X2,\n         \"1\" = X3,\n         \"2\" = X4,\n         \"3\" = X5,\n         \"4\" = X6,\n         \"5\" = X7,\n         \"6\" = X8,\n         \"7\" = X9,\n         \"8\" = X10,\n         \"9\" = X11,\n         \"10\" = X12,\n         \"11\" = X13,\n         \"12\" = X14) |&gt; \n  pivot_longer(cols = -c(Station, Year), names_to = \"Month\", values_to = \"Tavg\") |&gt; \n  mutate(Day = \"1\") |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\n\n####График температур (месячное разрешение) по данным метеостанции п.Бор\n\n\nПоказать код\nplot_ly(Bor_monthly, type = 'scatter', mode = 'lines')%&gt;%\n  add_trace(x = ~Date, y = ~Tavg)%&gt;%\n  layout(showlegend = F, title='',\n         yaxis = list(title = 'Температура, \\u00B0C'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\n####График температур (месячное разрешение) по данным метеостанции п.Верхнеимбатск\n\n\nПоказать код\nplot_ly(Verkhneimbatsk_monthly, type = 'scatter', mode = 'lines')%&gt;%\n  add_trace(x = ~Date, y = ~Tavg)%&gt;%\n  layout(showlegend = F, title='',\n         yaxis = list(title = 'Температура, \\u00B0C'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\nна первый взгляд, с этими данными гораздо меньше проблем, будем работать с ними.\n\n\nОценка корреляции между временными рядами (t приземного воздуха, месячное разрешение) трех метеостанций\nОбъединим данные со всех трех метеостанций и поместим в один датасет, после чего проверим на пропуски. Видим, что пропуски есть.\n\n\nПоказать код\nBor_Verkhn &lt;- Bor_monthly |&gt; \n  left_join(Verkhneimbatsk_monthly, by = c(\"Year\", \"Month\")) |&gt; \n  select(Year, Month, Bor_tavg = Tavg.x, Verkhn_tavg = Tavg.y) |&gt; \n  mutate(Year = as.integer(Year),\n         Month = as.integer(Month))\n\nBakhta_Bor_Verkhneimbatsk &lt;- Bakhta_monthly |&gt; \n  left_join(Bor_Verkhn, by = c(\"Year\", \"Month\")) |&gt; \n  mutate(Date = make_date(Year, Month)) |&gt; \n  ungroup() |&gt; \n  select(Date,Bakhta_tavg = Tavg, Bor_tavg, Verkhn_tavg) |&gt; \n  filter(!is.na(Date)) |&gt; \n  as.data.frame()\naggr(Bakhta_Bor_Verkhneimbatsk, prop = F, numbers = T) # \n\n\n\n\n\nОчистим пропуски методом простой линейной интерполяции\n\nBakhta_Bor_Verkhneimbatsk$Bor_tavg &lt;- na_interpolation(Bakhta_Bor_Verkhneimbatsk$Bor_tavg)\nBakhta_Bor_Verkhneimbatsk$Verkhn_tavg &lt;- na_interpolation(Bakhta_Bor_Verkhneimbatsk$Verkhn_tavg)\naggr(Bakhta_Bor_Verkhneimbatsk, prop = F, numbers = T) #Пропусков нет\n\n\n\n\nЗапустим кросс-вейвлет преобразование для оценки корреляции между временными рядами.\n\n\nПоказать код\nBakhta_Bor_cross &lt;- analyze.coherency(Bakhta_Bor_Verkhneimbatsk, c(\"Bakhta_tavg\", \"Bor_tavg\"), verbose = F)\nBakhta_Verkhn_cross &lt;- analyze.coherency(Bakhta_Bor_Verkhneimbatsk, c(\"Bakhta_tavg\", \"Verkhn_tavg\"), verbose = F)\nVerkhn_Bor_cross &lt;- analyze.coherency(Bakhta_Bor_Verkhneimbatsk, c(\"Verkhn_tavg\", \"Bor_tavg\") , verbose = F)\n\n\nПостроим спектрограммы проведенного анализа\n\n\nПоказать код\nwc.image(Bakhta_Bor_cross, which.image=\"wp\", timelab=\"время (количество месяцев)\", periodlab=\"период (месяцев)\", \n         main=\"Кросс-вейвлет Бор-Бахта\", \n         plot.arrow = F,\n         legend.params=list(lab=\"wavelet power-spectrum levels\", lab.line=3.5, label.digits=3))\n\n\n\n\n\nПоказать код\nwc.image(Bakhta_Verkhn_cross, which.image=\"wp\", timelab=\"время (количество месяцев)\", periodlab=\"период (месяцев)\", \n         main=\"Кросс-вейвлет Бахта-Верхнеимбатск\", \n         plot.arrow = F,\n         legend.params=list(lab=\"wavelet power-spectrum levels\", lab.line=3.5, label.digits=3))\n\n\n\n\n\nПоказать код\nwc.image(Bakhta_Verkhn_cross, which.image=\"wp\", timelab=\"время (количество месяцев)\", periodlab=\"период (месяцев)\", \n         main=\"Кросс-вейвлет Бор-Верхнеимбатск\", \n         plot.arrow = F,\n         legend.params=list(lab=\"wavelet power-spectrum levels\", lab.line=3.5, label.digits=3))\n\n\n\n\n\n\n\nЗамена некорректных значений осредненными\nТаким образом, все 3 временных ряда сильно коррелируют между собой. Заменим ошибочные значения темератур (лето 1966-1976гг) в п. Бахта осредненными значениями, полученными с метеостанций п. Бор и Верхнеимбатск\n\n\nПоказать код\nBor_Verkhn &lt;- Bor_monthly |&gt; \n  left_join(Verkhneimbatsk_monthly, by = c(\"Year\", \"Month\")) |&gt; \n  select(Year, Month, Bor_tavg = Tavg.x, Verkhn_tavg = Tavg.y) |&gt; \n  filter(Year %in% c(1966:1976), Month %in% c(6:8)) |&gt; \n  group_by(Year, Month) |&gt; \n  summarise(Tavg = mean(Bor_tavg, Verkhn_tavg)) |&gt; \n  mutate(Year = as.integer(Year),\n         Month = as.integer(Month))\n\nBakhta_monthly_new &lt;- Bakhta_monthly |&gt; \n  left_join(Bor_Verkhn, by = c(\"Year\", \"Month\")) |&gt; \n  mutate(Tavg = ifelse(is.na(Tavg.y) == F, Tavg.y, Tavg.x)) |&gt; \n  select(Year, Month, Tavg, Sn, Pr, Date)\n\n\nГрафик среднемесячных температур в п. Бахта (исходные данные)\n\n\nПоказать код\nplot_ly(Bakhta_monthly, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Tavg, name = \"Tavg\") |&gt; \n  layout(showlegend = T, title='',\n        yaxis = list(title = 'Температура, \\u00B0C'),\n        xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\nГрафик среднемесячных температур в Бахте (1966-1976гг 6-8 мес заменены на осредненные из Бора и Верхнеимбатска)\n\n\nПоказать код\nplot_ly(Bakhta_monthly_new, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Tavg, name = \"Tavg\") |&gt; \n  layout(showlegend = T, title='',\n         yaxis = list(title = 'Температура, \\u00B0C'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\nПоказать код\n#write.csv2(Bakhta_monthly_new, \"data/cleaned/Bakhta_monthly_1966-1976_replaced_by_average_Bor_Verkhn.csv\")"
  },
  {
    "objectID": "import_cleaning.html#проверка-на-выбросы",
    "href": "import_cleaning.html#проверка-на-выбросы",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Проверка на выбросы",
    "text": "Проверка на выбросы\nСреднесуточные температуры: пропусков нет (очистили ранее), но есть проблемы с летними периодами и сентябрем в 1966-1976 годах.\n\n\nПоказать код\nBakhta &lt;- climate |&gt; \n  select(Year, Month, Day, Tavg, Pr, Sn) |&gt; \n  mutate(Date = make_date(Year, Month, Day)) # датафрейм с датами в формате дат,чтобы plot_ly смог построить интерактивный график\n\nplot_ly(Bakhta, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Tavg, name = \"Tavg\") |&gt; \n  layout(showlegend = F, title='',\n         yaxis = list(title = 'Температура, \\u00B0C'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\nГрафик атмосферных осадков, видно выбросы\n\n\nПоказать код\nplot_ly(Bakhta, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Pr, name = \"Precipitation\") |&gt; \n  layout(showlegend = F, title='',\n         yaxis = list(title = 'Осадки, мм'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\nОчень сильные отклонения заменил осреднениями по соседним значениям\n\n\nПоказать код\nBakhta$Pr[Bakhta$Pr == 813] = 2\nBakhta$Pr[Bakhta$Pr == 204.3] = 3\nBakhta$Pr[Bakhta$Pr == 202] = 3\nplot_ly(Bakhta, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Pr, name = \"Precipitation\") |&gt; \n  layout(showlegend = F, title='',\n         yaxis = list(title = 'Осадки, мм'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\nГлубина снежного покрова\n\n\nПоказать код\nplot_ly(Bakhta, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Sn, name = \"Snow\") |&gt; \n  layout(showlegend = T, title='',\n         yaxis = list(title = 'Глубина снежного покрова, см'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\nПропусков в необходимых измерениях больше нет\n\n\nПоказать код\naggr(climate, prop = F, numbers = T)\n\n\n\n\n\nПоказать код\n#write.csv2(Bakhta, \"data/cleaned/Bakhta_daily_attention1966-1976(problems_with_summer).csv\")"
  },
  {
    "objectID": "import_cleaning.html#расчёт-среднемесячных-показателей-п.-бахта",
    "href": "import_cleaning.html#расчёт-среднемесячных-показателей-п.-бахта",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Расчёт среднемесячных показателей (п. Бахта)",
    "text": "Расчёт среднемесячных показателей (п. Бахта)\n\n\nПоказать код\nBakhta &lt;- read.csv2(\"../data/cleaned/Bakhta_daily_attention1966-1976(problems_with_summer).csv\")\n\nBakhta_monthly &lt;- Bakhta |&gt; \n  group_by(Year, Month) |&gt; \n  summarise(Tavg = mean(Tavg),\n            Sn = mean(Sn),\n            Pr = sum(Pr)) |&gt; #Накопленное за месяц количество осадков\n  mutate(Date = make_date(Year, Month))\n\n\n\nСреднемесячные температуры приземного воздуха (метеостанция п.Бахта)\n\n\nПоказать код\nplot_ly(Bakhta_monthly, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Tavg, name = \"Tavg\") |&gt; \n  layout(showlegend = F, title='',\n         yaxis = list(title = 'Температура, \\u00B0C'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\n\n\nСреднемесячная глубина снежного покрова (метеостанция п.Бахта)\n\n\nПоказать код\nplot_ly(Bakhta_monthly, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Sn, name = \"Snow\") |&gt; \n  layout(showlegend = F, title='',\n         yaxis = list(title = 'Глубина снежного покрова, см'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\n\n\nМесячная сумма осадков (метеостанция п.Бахта)\n\n\nПоказать код\nplot_ly(Bakhta_monthly, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Pr, name = \"Pr\") |&gt; \n  layout(showlegend = F, title='',\n         yaxis = list(title = 'Осадки, мм'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\n\n\nЗамена пропущенных значений температур (1966-1976гг)\nПоскольку температуры 1966-1976гг (6-9 месяцы) некорректные, их необходимо заменить. Ближайшие к Бахте метеостанции расположены в п. Бор (на 110 км южнее) и в п. Верхнеимбатск (94 км севернее).\nЗагрузим данные суточного разрешения для этих метеостанций:\n\n\nПоказать код\nBor_daily &lt;- read_table(\"../data/daily/Bor_daily.txt\", col_names = F) |&gt; \n  select(Station = X1,\n         Year = X2,\n         Month = X3,\n         Day = X4,\n         Tmin = X6,\n         Tavg = X7,\n         Tmax = X8,\n         Pr = X9) |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\nVerkhneimbatsk_daily &lt;- read_table(\"../data/daily/Verkhneimbatsk_daily.txt\", col_names = F) |&gt; \n  select(Station = X1,\n         Year = X2,\n         Month = X3,\n         Day = X4,\n         Tmin = X6,\n         Tavg = X7,\n         Tmax = X8,\n         Pr = X9) |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\n\n\n\nГрафик температур (суточное разрешение) по данным метеостанции п.Бор\n\n\nПоказать код\ninteractive_temperature_min_avg_max(Bor_daily)\n\n\n\n\n\n\n\n\nГрафик температур (суточное разрешение) по данным метеостанции п.Верхнеимбатск\n\n\nПоказать код\ninteractive_temperature_min_avg_max(Verkhneimbatsk_daily)\n\n\n\n\n\n\nПо обеим метеостанциям большие проблемы с суточными измерениями\nЗагрузим данные месячного разрешения из этих же поселков\n\n\nПоказать код\n# Бор и Верхнеимбатск месячные данные -------------------------------------\nBor_monthly &lt;- read_delim(\"../data/monthly/Bor_monthly.txt\", col_names = F,\n                          delim = \";\" , col_types = \"n\") |&gt; \n  mutate_all(as.numeric) |&gt; \n  select(Station = X1,\n         Year = X2,\n         \"1\" = X3,\n         \"2\" = X4,\n         \"3\" = X5,\n         \"4\" = X6,\n         \"5\" = X7,\n         \"6\" = X8,\n         \"7\" = X9,\n         \"8\" = X10,\n         \"9\" = X11,\n         \"10\" = X12,\n         \"11\" = X13,\n         \"12\" = X14) |&gt; \n  pivot_longer(cols = -c(Station, Year), names_to = \"Month\", values_to = \"Tavg\") |&gt; \n  mutate(Day = \"1\") |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\n\nVerkhneimbatsk_monthly &lt;- read_delim(\"../data/monthly/Verkhneimbatsk_monthly.txt\", col_names = F,\n                                     delim = \";\" , col_types = \"n\") |&gt; \n  mutate_all(as.numeric) |&gt; \n  select(Station = X1,\n         Year = X2,\n         \"1\" = X3,\n         \"2\" = X4,\n         \"3\" = X5,\n         \"4\" = X6,\n         \"5\" = X7,\n         \"6\" = X8,\n         \"7\" = X9,\n         \"8\" = X10,\n         \"9\" = X11,\n         \"10\" = X12,\n         \"11\" = X13,\n         \"12\" = X14) |&gt; \n  pivot_longer(cols = -c(Station, Year), names_to = \"Month\", values_to = \"Tavg\") |&gt; \n  mutate(Day = \"1\") |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\n\n\n\nГрафик температур (месячное разрешение) по данным метеостанции п.Бор\n\n\nПоказать код\nplot_ly(Bor_monthly, type = 'scatter', mode = 'lines')%&gt;%\n  add_trace(x = ~Date, y = ~Tavg)%&gt;%\n  layout(showlegend = F, title='',\n         yaxis = list(title = 'Температура, \\u00B0C'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\n\n\nГрафик температур (месячное разрешение) по данным метеостанции п.Верхнеимбатск\n\n\nПоказать код\nplot_ly(Verkhneimbatsk_monthly, type = 'scatter', mode = 'lines')%&gt;%\n  add_trace(x = ~Date, y = ~Tavg)%&gt;%\n  layout(showlegend = F, title='',\n         yaxis = list(title = 'Температура, \\u00B0C'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\nна первый взгляд, с этими данными гораздо меньше проблем, будем работать с ними."
  },
  {
    "objectID": "import_cleaning.html#оценка-корреляции-между-временными-рядами-t-приземного-воздуха-месячное-разрешение-трех-метеостанций",
    "href": "import_cleaning.html#оценка-корреляции-между-временными-рядами-t-приземного-воздуха-месячное-разрешение-трех-метеостанций",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Оценка корреляции между временными рядами (t приземного воздуха, месячное разрешение) трех метеостанций",
    "text": "Оценка корреляции между временными рядами (t приземного воздуха, месячное разрешение) трех метеостанций\nОбъединим данные со всех трех метеостанций и поместим в один датасет, после чего проверим на пропуски. Видим, что пропуски есть.\n\n\nПоказать код\nBor_Verkhn &lt;- Bor_monthly |&gt; \n  left_join(Verkhneimbatsk_monthly, by = c(\"Year\", \"Month\")) |&gt; \n  select(Year, Month, Bor_tavg = Tavg.x, Verkhn_tavg = Tavg.y) |&gt; \n  mutate(Year = as.integer(Year),\n         Month = as.integer(Month))\n\nBakhta_Bor_Verkhneimbatsk &lt;- Bakhta_monthly |&gt; \n  left_join(Bor_Verkhn, by = c(\"Year\", \"Month\")) |&gt; \n  mutate(Date = make_date(Year, Month)) |&gt; \n  ungroup() |&gt; \n  select(Date,Bakhta_tavg = Tavg, Bor_tavg, Verkhn_tavg) |&gt; \n  filter(!is.na(Date)) |&gt; \n  as.data.frame()\naggr(Bakhta_Bor_Verkhneimbatsk, prop = F, numbers = T) # \n\n\n\n\n\nОчистим пропуски методом простой линейной интерполяции\n\n\nПоказать код\nBakhta_Bor_Verkhneimbatsk$Bor_tavg &lt;- na_interpolation(Bakhta_Bor_Verkhneimbatsk$Bor_tavg)\nBakhta_Bor_Verkhneimbatsk$Verkhn_tavg &lt;- na_interpolation(Bakhta_Bor_Verkhneimbatsk$Verkhn_tavg)\naggr(Bakhta_Bor_Verkhneimbatsk, prop = F, numbers = T) #Пропусков нет\n\n\n\n\n\nЗапустим кросс-вейвлет преобразование для оценки корреляции между временными рядами.\n\n\nПоказать код\nBakhta_Bor_cross &lt;- analyze.coherency(Bakhta_Bor_Verkhneimbatsk, c(\"Bakhta_tavg\", \"Bor_tavg\"), verbose = F)\nBakhta_Verkhn_cross &lt;- analyze.coherency(Bakhta_Bor_Verkhneimbatsk, c(\"Bakhta_tavg\", \"Verkhn_tavg\"), verbose = F)\nVerkhn_Bor_cross &lt;- analyze.coherency(Bakhta_Bor_Verkhneimbatsk, c(\"Verkhn_tavg\", \"Bor_tavg\") , verbose = F)\n\n\n\nСпектрограммы кросс-вейвлет преобразования\n\n\nПоказать код\nwc.image(Bakhta_Bor_cross, which.image=\"wp\", timelab=\"время (количество месяцев)\", periodlab=\"период (месяцев)\", \n         main=\"Кросс-вейвлет Бор-Бахта\", \n         plot.arrow = F,\n         legend.params=list(lab=\"wavelet power-spectrum levels\", lab.line=3.5, label.digits=3))\n\n\n\n\n\nПоказать код\nwc.image(Bakhta_Verkhn_cross, which.image=\"wp\", timelab=\"время (количество месяцев)\", periodlab=\"период (месяцев)\", \n         main=\"Кросс-вейвлет Бахта-Верхнеимбатск\", \n         plot.arrow = F,\n         legend.params=list(lab=\"wavelet power-spectrum levels\", lab.line=3.5, label.digits=3))\n\n\n\n\n\nПоказать код\nwc.image(Bakhta_Verkhn_cross, which.image=\"wp\", timelab=\"время (количество месяцев)\", periodlab=\"период (месяцев)\", \n         main=\"Кросс-вейвлет Бор-Верхнеимбатск\", \n         plot.arrow = F,\n         legend.params=list(lab=\"wavelet power-spectrum levels\", lab.line=3.5, label.digits=3))"
  },
  {
    "objectID": "import_cleaning.html#замена-некорректных-значений-осредненными",
    "href": "import_cleaning.html#замена-некорректных-значений-осредненными",
    "title": "Исходный код: импорт и очистка данных",
    "section": "Замена некорректных значений осредненными",
    "text": "Замена некорректных значений осредненными\nТаким образом, все 3 временных ряда сильно коррелируют между собой. Заменим ошибочные значения темератур (июнь-сентябрь 1966-1976гг) в п. Бахта осредненными значениями, полученными с метеостанций п. Бор и Верхнеимбатск\n\n\nПоказать код\nBor_Verkhn &lt;- Bor_monthly |&gt; \n  left_join(Verkhneimbatsk_monthly, by = c(\"Year\", \"Month\")) |&gt; \n  select(Year, Month, Bor_tavg = Tavg.x, Verkhn_tavg = Tavg.y) |&gt; \n  filter(Year %in% c(1966:1976), Month %in% c(6:9)) |&gt; \n  group_by(Year, Month) |&gt; \n  summarise(Tavg = mean(Bor_tavg, Verkhn_tavg)) |&gt; \n  mutate(Year = as.integer(Year),\n         Month = as.integer(Month))\n\nBakhta_monthly_new &lt;- Bakhta_monthly |&gt; \n  left_join(Bor_Verkhn, by = c(\"Year\", \"Month\")) |&gt; \n  mutate(Tavg = ifelse(is.na(Tavg.y) == F, Tavg.y, Tavg.x)) |&gt; \n  select(Year, Month, Tavg, Sn, Pr, Date)"
  },
  {
    "objectID": "trends_calculation.html",
    "href": "trends_calculation.html",
    "title": "Современные изменения климата района исследования",
    "section": "",
    "text": "Показать код\nlibrary(tidyverse)\nlibrary(ggpmisc)\nlibrary(patchwork)\nBakhta_monthly &lt;- read.csv2(\"../data/cleaned/Bakhta_monthly_1966-1976_replaced_by_average_Bor_Verkhn.csv\") |&gt; \n  filter(!is.na(Date))\n\nBakhta_annualy &lt;- Bakhta_monthly |&gt; \n  filter(Year!= 2023) |&gt; # Так как данные за 2023 год только до 31 мая\n  group_by(Year) |&gt; \n  summarise(Tavg = mean(Tavg),\n            Pr = sum(Pr))\n\nsame_components_for_graph &lt;- function(){\n  list(\n      stat_poly_line(),\n      stat_poly_eq(use_label(c(\"eq\"))),\n      stat_poly_eq(use_label(c(\"R2\", \"P\")), label.y = 0.85),\n      theme_bw(),\n      theme(text=element_text(family=\"sans\", size = 10,\n                              colour = \"black\" ),\n            plot.caption = element_text(size = 11,\n                                        hjust = 0.5,\n                                        lineheight = 0.5),\n            plot.title = element_text(size = 14,\n                                        hjust = 0.5,\n                                        lineheight = 0.5)\n      )\n      \n  )\n} # добавляет на график линию тренда и уравнение\n\n\n# график среднегодовой температуры воздуха\ntemperature &lt;- ggplot(Bakhta_annualy, aes(Year, Tavg))+\n  geom_line()+\n  labs(y = \"Среднегодовая температура \\n воздуха [\\u00B0C]\",\n       x = \"\")+\n  same_components_for_graph()\n\n# график годовых сумм осадков\nprec &lt;- ggplot(Bakhta_annualy, aes(Year, Pr))+\n  geom_col()+\n  labs(y = \"Годовая сумма осадков [мм]\",\n       x = \"Год\")+\n  same_components_for_graph()\n\n# сведенные графики\ntemperature / prec + plot_annotation(\n  title = \"Тренды среднегодовой температуры и сумм осадков\", \n      caption = \n      \"y = intercept+b*x  - уравнение линейной регрессии,\n      где x - год,\n      b - угол наклона регрессионной прямой,\n      intercept - свободный член уравнения.\n      R\\u00B2 - коэффициент детерминации уравнения линейной регрессии\n      P - p-уровень значимости\") &\n      theme(plot.caption = element_text(size = 11,\n                                        hjust = 0.5,\n                                        lineheight = 0.7))\nПоказать код\ngraph_annualy_anomaly_prec &lt;- Bakhta_annual_anomaly |&gt; \n  filter(Year != 2023) |&gt;\n  ggplot(aes(Year, Pr_anomaly))+\n  geom_col()+\n  labs(title =\"\",\n       x = \"\",\n       y = \"Отклонения [мм]\")+\n  same_components_for_graph()\n\n# Отклонения от среднемесячной за 1961-1980 гг. суммы осадков [мм]\ngraph_monthly_anomaly_prec &lt;- ggplot(Bakhta_monthly_anomaly, aes(Year, Pr_anomaly))+\n  geom_col()+\n  facet_wrap(.~Month, ncol = 3)+\n  labs(title = \"\",\n       x = \"Год\",\n       y = \"Отклонения [мм]\")+\n  same_components_for_graph()\n\ngraph_annualy_anomaly_prec / graph_monthly_anomaly_prec +\n  plot_layout(heights = c(1,5))+\n  plot_annotation(\n  title = \"Аномалии  годовой и среднемесячных\n          \\nсумм осадков\", \n      caption = \n      \"y = intercept+b*x  - уравнение линейной регрессии,\n      где y - сумма осадков, x - год,\n      b - угол наклона регрессионной прямой,\n      intercept - свободный член уравнения.\n      R\\u00B2 - коэффициент детерминации уравнения линейной регрессии\n      P - p-уровень значимости\") &\n      theme(plot.caption = element_text(size = 11,\n                                        hjust = 0.5,\n                                        lineheight = 0.7),\n            plot.title = element_text(size = 14,\n                                        hjust = 0.5,\n                                        lineheight = 0.7))"
  },
  {
    "objectID": "trends_calculation.html#материалы-и-методы",
    "href": "trends_calculation.html#материалы-и-методы",
    "title": "Современные изменения климата района исследования",
    "section": "Материалы и методы",
    "text": "Материалы и методы\nДля анализа современных климатических изменений района исследований были использованы данные измерений приземной температуры воздуха и количества осадков на метеостанции п. Бахта (62°27′48″ с. ш. 89°00′15″ в. д.), расположенной в 20 км к северу от Енисейской экологической станции “Мирное” ИПЭЭ РАН. Данные за период 01.01.1961-31.01.2005 в суточном разрешении были предоставлены ФГБУ “ВНИИГМИ-МЦД”. Данные за период 01.02.2005-31.05.2023 были загружены из архива https://rp5.ru/ (одно измерение в 3 часа, было осреднено до суточного разрешения). Единичные пропущенные значения были заменены методом линейной интерполяции (функция na_interpolation из пакета imputeTS). Для расчета экстремальных (для мелких млекопитающих) периодов в дальнейшем были использованы очищенные данные суточного разрешения."
  },
  {
    "objectID": "trends_calculation.html#результаты",
    "href": "trends_calculation.html#результаты",
    "title": "Современные изменения климата района исследования",
    "section": "Результаты",
    "text": "Результаты\n\nТренды среднегодовой температуры и сумм осадков\nСогласно проведённому анализу, на территории исследований наблюдается положительный тренд средней годовой приземной температуры воздуха с коэффициентом линейного тренда b=0.0483 °C/ 10 лет и годовой суммы осадков (b=0.995 мм/10 лет), однако статистически значимым является лишь тренд средней годовой температуры воздуха."
  },
  {
    "objectID": "trends_calculation.html#тренды-среднегодовой-температуры-и-сумм-осадков",
    "href": "trends_calculation.html#тренды-среднегодовой-температуры-и-сумм-осадков",
    "title": "1. Современные изменения климата района исследования",
    "section": "Тренды среднегодовой температуры и сумм осадков",
    "text": "Тренды среднегодовой температуры и сумм осадков\nСогласно проведённому анализу, на территории исследований наблюдается положительный тренд средней годовой приземной температуры воздуха с коэффициентом линейного тренда b=0.0483 °C/ 10 лет и годовой суммы осадков (b=0.995 мм/10 лет), однако статистически значимым является лишь тренд средней годовой температуры воздуха.\n\n\nПоказать код\nlibrary(tidyverse)\nlibrary(ggpmisc)\nlibrary(patchwork)\nBakhta_monthly &lt;- read.csv2(\"../data/cleaned/Bakhta_monthly_1966-1976_replaced_by_average_Bor_Verkhn.csv\") |&gt; \n  filter(!is.na(Date))\n\nBakhta_annualy &lt;- Bakhta_monthly |&gt; \n  filter(Year!= 2023) |&gt; # Так как данные за 2023 год только до 31 мая\n  group_by(Year) |&gt; \n  summarise(Tavg = mean(Tavg),\n            Pr = sum(Pr))\n\nsame_components_for_graph &lt;- function(){\n  list(\n      stat_poly_line(),\n      stat_poly_eq(use_label(c(\"eq\"))),\n      stat_poly_eq(use_label(c(\"R2\", \"P\")), label.y = 0.85),\n      theme_bw(),\n      theme(text=element_text(family=\"sans\", size = 10,\n                              colour = \"black\" ),\n            plot.caption = element_text(size = 11,\n                                        hjust = 0.5,\n                                        lineheight = 0.5),\n            plot.title = element_text(size = 14,\n                                        hjust = 0.5,\n                                        lineheight = 0.5)\n      )\n      \n  )\n} # добавляет на график линию тренда и уравнение\n\n\n# график среднегодовой температуры воздуха\ntemperature &lt;- ggplot(Bakhta_annualy, aes(Year, Tavg))+\n  geom_line()+\n  labs(y = \"Среднегодовая температура \\n воздуха [\\u00B0C]\",\n       x = \"\")+\n  same_components_for_graph()\n\n# график годовых сумм осадков\nprec &lt;- ggplot(Bakhta_annualy, aes(Year, Pr))+\n  geom_col()+\n  labs(y = \"Годовая сумма осадков [мм]\",\n       x = \"Год\")+\n  same_components_for_graph()\n\n# сведенные графики\ntemperature / prec + plot_annotation(\n  title = \"Тренды среднегодовой температуры и сумм осадков\", \n      caption = \n      \"y = intercept+b*x  - уравнение линейной регрессии,\n      где x - год,\n      b - угол наклона регрессионной прямой,\n      intercept - свободный член уравнения.\n      R\\u00B2 - коэффициент детерминации уравнения линейной регрессии\n      P - p-уровень значимости\") &\n      theme(plot.caption = element_text(size = 11,\n                                        hjust = 0.5,\n                                        lineheight = 0.7))"
  },
  {
    "objectID": "trends_calculation.html#аномалии-приземной-температуры-воздуха",
    "href": "trends_calculation.html#аномалии-приземной-температуры-воздуха",
    "title": "1. Современные изменения климата района исследования",
    "section": "Аномалии приземной температуры воздуха",
    "text": "Аномалии приземной температуры воздуха\nАномалии были рассчитаны как разность между средней температурой воздуха в определённый год или месяц и средней годовой/месячной температурой за выбранный опорный период (1961-1980).\nНа территории исследований наблюдается статистически значимый положительный тренд аномалий средней годовой приземной температуры воздуха с коэффициентом линейного тренда b=0.0483 °C/ 10 лет. Кроме того, значимы положительные тренды для следующих месяцев (в порядке убывания темппов роста): февраля (b=0.0941°C/10 лет), мая (b=0.0903°C/10 лет), марта (b=0.0857°C/10 лет), апреля (b=0.076°C/10 лет), июня (b=0.0537°C/10 лет), октября (b=0.0631°C/10 лет).\n\n\nПоказать код\n# средние значения за опорный период\nbase_annual &lt;- Bakhta_monthly |&gt; \n  filter(Year %in% c(1961:1980)) |&gt; \n  summarise(Tavg_base = mean(Tavg),\n            Pr_base = mean(Pr))\n# среднегодовые аномалии\nBakhta_annual_anomaly &lt;- Bakhta_monthly |&gt;\n  group_by(Year) |&gt; \n  summarise(Tavg = mean(Tavg),\n            Pr = mean(Pr),\n            Sn = mean(Sn)) |&gt; \n  mutate(Tavg_base = base_annual$Tavg_base,\n         Pr_base = base_annual$Pr_base) |&gt; \n  mutate(Tavg_anomaly = Tavg - Tavg_base,\n         Pr_anomaly = Pr - Pr_base)\n\n# среднемесячные за опорный период\nbase_monthly &lt;- Bakhta_monthly |&gt; \n  filter(Year %in% c(1961:1980)) |&gt; \n  group_by(Month) |&gt; \n  summarise(Tavg_base = mean(Tavg),\n            Pr_base = mean(Pr))\n# аномалии по месяцам\nBakhta_monthly_anomaly &lt;- Bakhta_monthly |&gt; \n  left_join(base_monthly, by = c(\"Month\")) |&gt; \n  mutate(Tavg_anomaly = Tavg - Tavg_base,\n         Pr_anomaly = Pr - Pr_base)\n\n\n#Графики\n# 2023 год надо исключать, потому что он неполный\ngraph_annualy_anomaly_temp &lt;- Bakhta_annual_anomaly |&gt; \n  filter(Year != 2023) |&gt;\n  ggplot(aes(Year, Tavg_anomaly))+\n  geom_line()+\n  labs(title = \"\",\n       x = \"\",\n       y = \"Температурные аномалии, [\\u00B0C]\")+\n  same_components_for_graph()\n\nBakhta_monthly_anomaly &lt;- Bakhta_monthly_anomaly |&gt; \n  mutate(Month = factor(Month, labels = c(\"Январь\", \"Февраль\", \"Март\",\n                                          \"Апрель\", \"Май\",\"Июнь\",\"Июль\",\n                                          \"Август\",\"Сентябрь\",\"Октябрь\",\n                                          \"Ноябрь\", \"Декабрь\")))\n\n# Отклонения  температуры воздуха по месяцам\ngraph_monthly_anomaly_temp &lt;- ggplot(Bakhta_monthly_anomaly, aes(Year, Tavg_anomaly))+\n  geom_line()+\n  facet_wrap(.~Month, ncol = 3)+\n  labs(title = \"\",\n       x = \"Год\",\n       y = \"Температурные аномалии, [\\u00B0C]\")+\n  ylim(NA,20)+\n  same_components_for_graph()\n\ngraph_annualy_anomaly_temp / graph_monthly_anomaly_temp + \n  plot_layout(heights = c(1,5))+\n  plot_annotation(\n  title = \"Аномалии средней годовой и средних месячных\n          \\nприземных температур воздуха\", \n      caption = \n      \"y = intercept+b*x  - уравнение линейной регрессии,\n      где y - температура воздуха, x - год,\n      b - угол наклона регрессионной прямой,\n      intercept - свободный член уравнения.\n      R\\u00B2 - коэффициент детерминации уравнения линейной регрессии\n      P - p-уровень значимости\") &\n      theme(plot.caption = element_text(size = 11,\n                                        hjust = 0.5,\n                                        lineheight = 0.7),\n            plot.title = element_text(size = 14,\n                                        hjust = 0.5,\n                                        lineheight = 0.7))"
  },
  {
    "objectID": "trends_calculation.html#аномалии-количества-осадков",
    "href": "trends_calculation.html#аномалии-количества-осадков",
    "title": "1. Современные изменения климата района исследования",
    "section": "Аномалии количества осадков",
    "text": "Аномалии количества осадков\nСтатистически значимый положительный тренд аномалий количества осадков характерен только для февраля (b=0.191 мм/10 лет) и марта (b=0.319 мм/10 лет). Для остальных месяцев характерны незначимые положительные либо отсутствие тренда. Июль характеризуется статистически незначимым нисходящим трендом (b=-0.32 мм/10лет).\n\n\nПоказать код\ngraph_annualy_anomaly_prec &lt;- Bakhta_annual_anomaly |&gt; \n  filter(Year != 2023) |&gt;\n  ggplot(aes(Year, Pr_anomaly))+\n  geom_col()+\n  labs(title =\"\",\n       x = \"\",\n       y = \"Отклонения [мм]\")+\n  same_components_for_graph()\n\n# Отклонения от среднемесячной за 1961-1980 гг. суммы осадков [мм]\ngraph_monthly_anomaly_prec &lt;- ggplot(Bakhta_monthly_anomaly, aes(Year, Pr_anomaly))+\n  geom_col()+\n  facet_wrap(.~Month, ncol = 3)+\n  labs(title = \"\",\n       x = \"Год\",\n       y = \"Отклонения [мм]\")+\n  same_components_for_graph()\n\ngraph_annualy_anomaly_prec / graph_monthly_anomaly_prec +\n  plot_layout(heights = c(1,5))+\n  plot_annotation(\n  title = \"Аномалии  годовой и среднемесячных\n          \\nсумм осадков\", \n      caption = \n      \"y = intercept+b*x  - уравнение линейной регрессии,\n      где y - сумма осадков, x - год,\n      b - угол наклона регрессионной прямой,\n      intercept - свободный член уравнения.\n      R\\u00B2 - коэффициент детерминации уравнения линейной регрессии\n      P - p-уровень значимости\") &\n      theme(plot.caption = element_text(size = 11,\n                                        hjust = 0.5,\n                                        lineheight = 0.7),\n            plot.title = element_text(size = 14,\n                                        hjust = 0.5,\n                                        lineheight = 0.7))"
  },
  {
    "objectID": "1_trends_calculation.html#тренды-среднегодовой-температуры-и-сумм-осадков",
    "href": "1_trends_calculation.html#тренды-среднегодовой-температуры-и-сумм-осадков",
    "title": "Современные изменения климата района исследования",
    "section": "Тренды среднегодовой температуры и сумм осадков",
    "text": "Тренды среднегодовой температуры и сумм осадков\nСогласно проведённому анализу, на территории исследований наблюдается положительный тренд средней годовой приземной температуры воздуха с коэффициентом линейного тренда b=0.0483 °C/ 10 лет и годовой суммы осадков (b=0.995 мм/10 лет), однако статистически значимым является лишь тренд средней годовой температуры воздуха.\n\n\nПоказать код\nlibrary(tidyverse)\nlibrary(ggpmisc)\nlibrary(patchwork)\nBakhta_monthly &lt;- read.csv2(\"../data/cleaned/Bakhta_monthly_1966-1976_replaced_by_average_Bor_Verkhn.csv\") |&gt; \n  filter(!is.na(Date))\n\nBakhta_annualy &lt;- Bakhta_monthly |&gt; \n  filter(Year!= 2023) |&gt; # Так как данные за 2023 год только до 31 мая\n  group_by(Year) |&gt; \n  summarise(Tavg = mean(Tavg),\n            Pr = sum(Pr))\n\nsame_components_for_graph &lt;- function(){\n  list(\n      stat_poly_line(),\n      stat_poly_eq(use_label(c(\"eq\"))),\n      stat_poly_eq(use_label(c(\"R2\", \"P\")), label.y = 0.85),\n      theme_bw(),\n      theme(text=element_text(family=\"sans\", size = 10,\n                              colour = \"black\" ),\n            plot.caption = element_text(size = 11,\n                                        hjust = 0.5,\n                                        lineheight = 0.5),\n            plot.title = element_text(size = 14,\n                                        hjust = 0.5,\n                                        lineheight = 0.5)\n      )\n      \n  )\n} # добавляет на график линию тренда и уравнение\n\n\n# график среднегодовой температуры воздуха\ntemperature &lt;- ggplot(Bakhta_annualy, aes(Year, Tavg))+\n  geom_line()+\n  labs(y = \"Среднегодовая температура \\n воздуха [\\u00B0C]\",\n       x = \"\")+\n  same_components_for_graph()\n\n# график годовых сумм осадков\nprec &lt;- ggplot(Bakhta_annualy, aes(Year, Pr))+\n  geom_col()+\n  labs(y = \"Годовая сумма осадков [мм]\",\n       x = \"Год\")+\n  same_components_for_graph()\n\n# сведенные графики\ntemperature / prec + plot_annotation(\n  title = \"Тренды среднегодовой температуры и сумм осадков\", \n      caption = \n      \"y = intercept+b*x  - уравнение линейной регрессии,\n      где x - год,\n      b - угол наклона регрессионной прямой,\n      intercept - свободный член уравнения.\n      R\\u00B2 - коэффициент детерминации уравнения линейной регрессии\n      P - p-уровень значимости\") &\n      theme(plot.caption = element_text(size = 11,\n                                        hjust = 0.5,\n                                        lineheight = 0.7))"
  },
  {
    "objectID": "1_trends_calculation.html#аномалии-приземной-температуры-воздуха",
    "href": "1_trends_calculation.html#аномалии-приземной-температуры-воздуха",
    "title": "Современные изменения климата района исследования",
    "section": "Аномалии приземной температуры воздуха",
    "text": "Аномалии приземной температуры воздуха\nАномалии были рассчитаны как разность между средней температурой воздуха в определённый год или месяц и средней годовой/месячной температурой за выбранный опорный период (1961-1980).\nНа территории исследований наблюдается статистически значимый положительный тренд аномалий средней годовой приземной температуры воздуха с коэффициентом линейного тренда b=0.0483 °C/ 10 лет. Кроме того, значимы положительные тренды для следующих месяцев (в порядке убывания темппов роста): февраля (b=0.0941°C/10 лет), мая (b=0.0903°C/10 лет), марта (b=0.0857°C/10 лет), апреля (b=0.076°C/10 лет), июня (b=0.0537°C/10 лет), октября (b=0.0631°C/10 лет).\n\n\nПоказать код\n# средние значения за опорный период\nbase_annual &lt;- Bakhta_monthly |&gt; \n  filter(Year %in% c(1961:1980)) |&gt; \n  summarise(Tavg_base = mean(Tavg),\n            Pr_base = mean(Pr))\n# среднегодовые аномалии\nBakhta_annual_anomaly &lt;- Bakhta_monthly |&gt;\n  group_by(Year) |&gt; \n  summarise(Tavg = mean(Tavg),\n            Pr = mean(Pr),\n            Sn = mean(Sn)) |&gt; \n  mutate(Tavg_base = base_annual$Tavg_base,\n         Pr_base = base_annual$Pr_base) |&gt; \n  mutate(Tavg_anomaly = Tavg - Tavg_base,\n         Pr_anomaly = Pr - Pr_base)\n\n# среднемесячные за опорный период\nbase_monthly &lt;- Bakhta_monthly |&gt; \n  filter(Year %in% c(1961:1980)) |&gt; \n  group_by(Month) |&gt; \n  summarise(Tavg_base = mean(Tavg),\n            Pr_base = mean(Pr))\n# аномалии по месяцам\nBakhta_monthly_anomaly &lt;- Bakhta_monthly |&gt; \n  left_join(base_monthly, by = c(\"Month\")) |&gt; \n  mutate(Tavg_anomaly = Tavg - Tavg_base,\n         Pr_anomaly = Pr - Pr_base)\n\n\n#Графики\n# 2023 год надо исключать, потому что он неполный\ngraph_annualy_anomaly_temp &lt;- Bakhta_annual_anomaly |&gt; \n  filter(Year != 2023) |&gt;\n  ggplot(aes(Year, Tavg_anomaly))+\n  geom_line()+\n  labs(title = \"\",\n       x = \"\",\n       y = \"Температурные аномалии, [\\u00B0C]\")+\n  same_components_for_graph()\n\nBakhta_monthly_anomaly &lt;- Bakhta_monthly_anomaly |&gt; \n  mutate(Month = factor(Month, labels = c(\"Январь\", \"Февраль\", \"Март\",\n                                          \"Апрель\", \"Май\",\"Июнь\",\"Июль\",\n                                          \"Август\",\"Сентябрь\",\"Октябрь\",\n                                          \"Ноябрь\", \"Декабрь\")))\n\n# Отклонения  температуры воздуха по месяцам\ngraph_monthly_anomaly_temp &lt;- ggplot(Bakhta_monthly_anomaly, aes(Year, Tavg_anomaly))+\n  geom_line()+\n  facet_wrap(.~Month, ncol = 3)+\n  labs(title = \"\",\n       x = \"Год\",\n       y = \"Температурные аномалии, [\\u00B0C]\")+\n  ylim(NA,20)+\n  same_components_for_graph()\n\ngraph_annualy_anomaly_temp / graph_monthly_anomaly_temp + \n  plot_layout(heights = c(1,5))+\n  plot_annotation(\n  title = \"Аномалии средней годовой и средних месячных\n          \\nприземных температур воздуха\", \n      caption = \n      \"y = intercept+b*x  - уравнение линейной регрессии,\n      где y - температура воздуха, x - год,\n      b - угол наклона регрессионной прямой,\n      intercept - свободный член уравнения.\n      R\\u00B2 - коэффициент детерминации уравнения линейной регрессии\n      P - p-уровень значимости\") &\n      theme(plot.caption = element_text(size = 11,\n                                        hjust = 0.5,\n                                        lineheight = 0.7),\n            plot.title = element_text(size = 14,\n                                        hjust = 0.5,\n                                        lineheight = 0.7))"
  },
  {
    "objectID": "1_trends_calculation.html#аномалии-количества-осадков",
    "href": "1_trends_calculation.html#аномалии-количества-осадков",
    "title": "Современные изменения климата района исследования",
    "section": "Аномалии количества осадков",
    "text": "Аномалии количества осадков\nСтатистически значимый положительный тренд аномалий количества осадков характерен только для февраля (b=0.191 мм/10 лет) и марта (b=0.319 мм/10 лет). Для остальных месяцев характерны незначимые положительные либо отсутствие тренда. Июль характеризуется статистически незначимым нисходящим трендом (b=-0.32 мм/10лет).\n\n\nПоказать код\ngraph_annualy_anomaly_prec &lt;- Bakhta_annual_anomaly |&gt; \n  filter(Year != 2023) |&gt;\n  ggplot(aes(Year, Pr_anomaly))+\n  geom_col()+\n  labs(title =\"\",\n       x = \"\",\n       y = \"Отклонения [мм]\")+\n  same_components_for_graph()\n\n# Отклонения от среднемесячной за 1961-1980 гг. суммы осадков [мм]\ngraph_monthly_anomaly_prec &lt;- ggplot(Bakhta_monthly_anomaly, aes(Year, Pr_anomaly))+\n  geom_col()+\n  facet_wrap(.~Month, ncol = 3)+\n  labs(title = \"\",\n       x = \"Год\",\n       y = \"Отклонения [мм]\")+\n  same_components_for_graph()\n\ngraph_annualy_anomaly_prec / graph_monthly_anomaly_prec +\n  plot_layout(heights = c(1,5))+\n  plot_annotation(\n  title = \"Аномалии  годовой и среднемесячных\n          \\nсумм осадков\", \n      caption = \n      \"y = intercept+b*x  - уравнение линейной регрессии,\n      где y - сумма осадков, x - год,\n      b - угол наклона регрессионной прямой,\n      intercept - свободный член уравнения.\n      R\\u00B2 - коэффициент детерминации уравнения линейной регрессии\n      P - p-уровень значимости\") &\n      theme(plot.caption = element_text(size = 11,\n                                        hjust = 0.5,\n                                        lineheight = 0.7),\n            plot.title = element_text(size = 14,\n                                        hjust = 0.5,\n                                        lineheight = 0.7))"
  },
  {
    "objectID": "2_import_cleaning.html",
    "href": "2_import_cleaning.html",
    "title": "Импорт и очистка данных",
    "section": "",
    "text": "Все вычисления были выполнены с помощью языка статистической обработки данных R в среде Rstudio. Были использованы как самостоятельно написанные функции, так и готовые решения, такие как:\n\n1library(tidyverse)\n2library(readxl)\n3library(plotly)\n4library(VIM)\n5library(imputeTS)\n6library(WaveletComp)\n\n\n1\n\nЭкосистема пакетов tidyverse, включающая в себя пакеты dplyr для “аккуратных” вычислений, ggplot2 для построения графиков и другие https://www.tidyverse.org/\n\n2\n\nИспользовался для импорта файлов Excel\n\n3\n\nПакет для создания интерактивных визуализаций\n\n4\n\nИспользовался для визуализации количества пропущенных значений\n\n5\n\nИспользовался для заполнения пропущенных значений линейной интерполяцией\n\n6\n\nВейвлет-преобразование временных рядов"
  },
  {
    "objectID": "2_import_cleaning.html#проверка-на-выбросы",
    "href": "2_import_cleaning.html#проверка-на-выбросы",
    "title": "Импорт и очистка данных",
    "section": "Проверка на выбросы",
    "text": "Проверка на выбросы\nСреднесуточные температуры: пропусков нет (очистили ранее), но есть проблемы с летними периодами и сентябрем в 1966-1976 годах.\n\n\nПоказать код\nBakhta &lt;- climate |&gt; \n  select(Year, Month, Day, Tavg, Pr, Sn) |&gt; \n  mutate(Date = make_date(Year, Month, Day)) # датафрейм с датами в формате дат,чтобы plot_ly смог построить интерактивный график\n\nplot_ly(Bakhta, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Tavg, name = \"Tavg\") |&gt; \n  layout(showlegend = F, title='',\n         yaxis = list(title = 'Температура, \\u00B0C'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\nГрафик атмосферных осадков, видно выбросы\n\n\nПоказать код\nplot_ly(Bakhta, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Pr, name = \"Precipitation\") |&gt; \n  layout(showlegend = F, title='',\n         yaxis = list(title = 'Осадки, мм'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\nОчень сильные отклонения заменил осреднениями по соседним значениям\n\n\nПоказать код\nBakhta$Pr[Bakhta$Pr == 813] = 2\nBakhta$Pr[Bakhta$Pr == 204.3] = 3\nBakhta$Pr[Bakhta$Pr == 202] = 3\nplot_ly(Bakhta, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Pr, name = \"Precipitation\") |&gt; \n  layout(showlegend = F, title='',\n         yaxis = list(title = 'Осадки, мм'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\nГлубина снежного покрова\n\n\nПоказать код\nplot_ly(Bakhta, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Sn, name = \"Snow\") |&gt; \n  layout(showlegend = T, title='',\n         yaxis = list(title = 'Глубина снежного покрова, см'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\nПропусков в необходимых измерениях больше нет\n\n\nПоказать код\naggr(climate, prop = F, numbers = T)\n\n\n\n\n\nПоказать код\n#write.csv2(Bakhta, \"data/cleaned/Bakhta_daily_attention1966-1976(problems_with_summer).csv\")"
  },
  {
    "objectID": "2_import_cleaning.html#расчёт-среднемесячных-показателей-п.-бахта",
    "href": "2_import_cleaning.html#расчёт-среднемесячных-показателей-п.-бахта",
    "title": "Импорт и очистка данных",
    "section": "Расчёт среднемесячных показателей (п. Бахта)",
    "text": "Расчёт среднемесячных показателей (п. Бахта)\n\n\nПоказать код\nBakhta &lt;- read.csv2(\"../data/cleaned/Bakhta_daily_attention1966-1976(problems_with_summer).csv\")\n\nBakhta_monthly &lt;- Bakhta |&gt; \n  group_by(Year, Month) |&gt; \n  summarise(Tavg = mean(Tavg),\n            Sn = mean(Sn),\n            Pr = sum(Pr)) |&gt; #Накопленное за месяц количество осадков\n  mutate(Date = make_date(Year, Month))\n\n\n\nСреднемесячные температуры приземного воздуха (метеостанция п.Бахта)\n\n\nПоказать код\nplot_ly(Bakhta_monthly, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Tavg, name = \"Tavg\") |&gt; \n  layout(showlegend = F, title='',\n         yaxis = list(title = 'Температура, \\u00B0C'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\n\n\nСреднемесячная глубина снежного покрова (метеостанция п.Бахта)\n\n\nПоказать код\nplot_ly(Bakhta_monthly, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Sn, name = \"Snow\") |&gt; \n  layout(showlegend = F, title='',\n         yaxis = list(title = 'Глубина снежного покрова, см'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\n\n\nМесячная сумма осадков (метеостанция п.Бахта)\n\n\nПоказать код\nplot_ly(Bakhta_monthly, type = 'scatter', mode = 'lines') |&gt; \n  add_trace(x = ~Date, y = ~Pr, name = \"Pr\") |&gt; \n  layout(showlegend = F, title='',\n         yaxis = list(title = 'Осадки, мм'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\n\n\nЗамена пропущенных значений температур (1966-1976гг)\nПоскольку температуры 1966-1976гг (6-9 месяцы) некорректные, их необходимо заменить. Ближайшие к Бахте метеостанции расположены в п. Бор (на 110 км южнее) и в п. Верхнеимбатск (94 км севернее).\nЗагрузим данные суточного разрешения для этих метеостанций:\n\n\nПоказать код\nBor_daily &lt;- read_table(\"../data/daily/Bor_daily.txt\", col_names = F) |&gt; \n  select(Station = X1,\n         Year = X2,\n         Month = X3,\n         Day = X4,\n         Tmin = X6,\n         Tavg = X7,\n         Tmax = X8,\n         Pr = X9) |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\nVerkhneimbatsk_daily &lt;- read_table(\"../data/daily/Verkhneimbatsk_daily.txt\", col_names = F) |&gt; \n  select(Station = X1,\n         Year = X2,\n         Month = X3,\n         Day = X4,\n         Tmin = X6,\n         Tavg = X7,\n         Tmax = X8,\n         Pr = X9) |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\n\n\n\nГрафик температур (суточное разрешение) по данным метеостанции п.Бор\n\n\nПоказать код\ninteractive_temperature_min_avg_max(Bor_daily)\n\n\n\n\n\n\n\n\nГрафик температур (суточное разрешение) по данным метеостанции п.Верхнеимбатск\n\n\nПоказать код\ninteractive_temperature_min_avg_max(Verkhneimbatsk_daily)\n\n\n\n\n\n\nПо обеим метеостанциям большие проблемы с суточными измерениями\nЗагрузим данные месячного разрешения из этих же поселков\n\n\nПоказать код\n# Бор и Верхнеимбатск месячные данные -------------------------------------\nBor_monthly &lt;- read_delim(\"../data/monthly/Bor_monthly.txt\", col_names = F,\n                          delim = \";\" , col_types = \"n\") |&gt; \n  mutate_all(as.numeric) |&gt; \n  select(Station = X1,\n         Year = X2,\n         \"1\" = X3,\n         \"2\" = X4,\n         \"3\" = X5,\n         \"4\" = X6,\n         \"5\" = X7,\n         \"6\" = X8,\n         \"7\" = X9,\n         \"8\" = X10,\n         \"9\" = X11,\n         \"10\" = X12,\n         \"11\" = X13,\n         \"12\" = X14) |&gt; \n  pivot_longer(cols = -c(Station, Year), names_to = \"Month\", values_to = \"Tavg\") |&gt; \n  mutate(Day = \"1\") |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\n\nVerkhneimbatsk_monthly &lt;- read_delim(\"../data/monthly/Verkhneimbatsk_monthly.txt\", col_names = F,\n                                     delim = \";\" , col_types = \"n\") |&gt; \n  mutate_all(as.numeric) |&gt; \n  select(Station = X1,\n         Year = X2,\n         \"1\" = X3,\n         \"2\" = X4,\n         \"3\" = X5,\n         \"4\" = X6,\n         \"5\" = X7,\n         \"6\" = X8,\n         \"7\" = X9,\n         \"8\" = X10,\n         \"9\" = X11,\n         \"10\" = X12,\n         \"11\" = X13,\n         \"12\" = X14) |&gt; \n  pivot_longer(cols = -c(Station, Year), names_to = \"Month\", values_to = \"Tavg\") |&gt; \n  mutate(Day = \"1\") |&gt; \n  mutate(Date = make_date(Year, Month, Day))\n\n\n\n\nГрафик температур (месячное разрешение) по данным метеостанции п.Бор\n\n\nПоказать код\nplot_ly(Bor_monthly, type = 'scatter', mode = 'lines')%&gt;%\n  add_trace(x = ~Date, y = ~Tavg)%&gt;%\n  layout(showlegend = F, title='',\n         yaxis = list(title = 'Температура, \\u00B0C'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\n\n\nГрафик температур (месячное разрешение) по данным метеостанции п.Верхнеимбатск\n\n\nПоказать код\nplot_ly(Verkhneimbatsk_monthly, type = 'scatter', mode = 'lines')%&gt;%\n  add_trace(x = ~Date, y = ~Tavg)%&gt;%\n  layout(showlegend = F, title='',\n         yaxis = list(title = 'Температура, \\u00B0C'),\n         xaxis = list(rangeslider = list(visible = T),\n                      title = ''))\n\n\n\n\n\n\nна первый взгляд, с этими данными гораздо меньше проблем, будем работать с ними."
  },
  {
    "objectID": "2_import_cleaning.html#оценка-корреляции-между-временными-рядами-t-приземного-воздуха-месячное-разрешение-трех-метеостанций",
    "href": "2_import_cleaning.html#оценка-корреляции-между-временными-рядами-t-приземного-воздуха-месячное-разрешение-трех-метеостанций",
    "title": "Импорт и очистка данных",
    "section": "Оценка корреляции между временными рядами (t приземного воздуха, месячное разрешение) трех метеостанций",
    "text": "Оценка корреляции между временными рядами (t приземного воздуха, месячное разрешение) трех метеостанций\nОбъединим данные со всех трех метеостанций и поместим в один датасет, после чего проверим на пропуски. Видим, что пропуски есть.\n\n\nПоказать код\nBor_Verkhn &lt;- Bor_monthly |&gt; \n  left_join(Verkhneimbatsk_monthly, by = c(\"Year\", \"Month\")) |&gt; \n  select(Year, Month, Bor_tavg = Tavg.x, Verkhn_tavg = Tavg.y) |&gt; \n  mutate(Year = as.integer(Year),\n         Month = as.integer(Month))\n\nBakhta_Bor_Verkhneimbatsk &lt;- Bakhta_monthly |&gt; \n  left_join(Bor_Verkhn, by = c(\"Year\", \"Month\")) |&gt; \n  mutate(Date = make_date(Year, Month)) |&gt; \n  ungroup() |&gt; \n  select(Date,Bakhta_tavg = Tavg, Bor_tavg, Verkhn_tavg) |&gt; \n  filter(!is.na(Date)) |&gt; \n  as.data.frame()\naggr(Bakhta_Bor_Verkhneimbatsk, prop = F, numbers = T) # \n\n\n\n\n\nОчистим пропуски методом простой линейной интерполяции\n\n\nПоказать код\nBakhta_Bor_Verkhneimbatsk$Bor_tavg &lt;- na_interpolation(Bakhta_Bor_Verkhneimbatsk$Bor_tavg)\nBakhta_Bor_Verkhneimbatsk$Verkhn_tavg &lt;- na_interpolation(Bakhta_Bor_Verkhneimbatsk$Verkhn_tavg)\naggr(Bakhta_Bor_Verkhneimbatsk, prop = F, numbers = T) #Пропусков нет\n\n\n\n\n\nЗапустим кросс-вейвлет преобразование для оценки корреляции между временными рядами.\n\n\nПоказать код\nBakhta_Bor_cross &lt;- analyze.coherency(Bakhta_Bor_Verkhneimbatsk, c(\"Bakhta_tavg\", \"Bor_tavg\"), verbose = F)\nBakhta_Verkhn_cross &lt;- analyze.coherency(Bakhta_Bor_Verkhneimbatsk, c(\"Bakhta_tavg\", \"Verkhn_tavg\"), verbose = F)\nVerkhn_Bor_cross &lt;- analyze.coherency(Bakhta_Bor_Verkhneimbatsk, c(\"Verkhn_tavg\", \"Bor_tavg\") , verbose = F)\n\n\n\nСпектрограммы кросс-вейвлет преобразования\n\n\nПоказать код\nwc.image(Bakhta_Bor_cross, which.image=\"wp\", timelab=\"время (количество месяцев)\", periodlab=\"период (месяцев)\", \n         main=\"Кросс-вейвлет Бор-Бахта\", \n         plot.arrow = F,\n         legend.params=list(lab=\"wavelet power-spectrum levels\", lab.line=3.5, label.digits=3))\n\n\n\n\n\nПоказать код\nwc.image(Bakhta_Verkhn_cross, which.image=\"wp\", timelab=\"время (количество месяцев)\", periodlab=\"период (месяцев)\", \n         main=\"Кросс-вейвлет Бахта-Верхнеимбатск\", \n         plot.arrow = F,\n         legend.params=list(lab=\"wavelet power-spectrum levels\", lab.line=3.5, label.digits=3))\n\n\n\n\n\nПоказать код\nwc.image(Bakhta_Verkhn_cross, which.image=\"wp\", timelab=\"время (количество месяцев)\", periodlab=\"период (месяцев)\", \n         main=\"Кросс-вейвлет Бор-Верхнеимбатск\", \n         plot.arrow = F,\n         legend.params=list(lab=\"wavelet power-spectrum levels\", lab.line=3.5, label.digits=3))"
  },
  {
    "objectID": "2_import_cleaning.html#замена-некорректных-значений-осредненными",
    "href": "2_import_cleaning.html#замена-некорректных-значений-осредненными",
    "title": "Импорт и очистка данных",
    "section": "Замена некорректных значений осредненными",
    "text": "Замена некорректных значений осредненными\nТаким образом, все 3 временных ряда сильно коррелируют между собой. Заменим ошибочные значения темератур (июнь-сентябрь 1966-1976гг) в п. Бахта осредненными значениями, полученными с метеостанций п. Бор и Верхнеимбатск\n\n\nПоказать код\nBor_Verkhn &lt;- Bor_monthly |&gt; \n  left_join(Verkhneimbatsk_monthly, by = c(\"Year\", \"Month\")) |&gt; \n  select(Year, Month, Bor_tavg = Tavg.x, Verkhn_tavg = Tavg.y) |&gt; \n  filter(Year %in% c(1966:1976), Month %in% c(6:9)) |&gt; \n  group_by(Year, Month) |&gt; \n  summarise(Tavg = mean(Bor_tavg, Verkhn_tavg)) |&gt; \n  mutate(Year = as.integer(Year),\n         Month = as.integer(Month))\n\nBakhta_monthly_new &lt;- Bakhta_monthly |&gt; \n  left_join(Bor_Verkhn, by = c(\"Year\", \"Month\")) |&gt; \n  mutate(Tavg = ifelse(is.na(Tavg.y) == F, Tavg.y, Tavg.x)) |&gt; \n  select(Year, Month, Tavg, Sn, Pr, Date)"
  },
  {
    "objectID": "index.html#тренды-среднегодовой-температуры-и-сумм-осадков",
    "href": "index.html#тренды-среднегодовой-температуры-и-сумм-осадков",
    "title": "Современные изменения климата района исследования",
    "section": "Тренды среднегодовой температуры и сумм осадков",
    "text": "Тренды среднегодовой температуры и сумм осадков\nСогласно проведённому анализу, на территории исследований наблюдается положительный тренд средней годовой приземной температуры воздуха с коэффициентом линейного тренда b=0.0483 °C/ 10 лет и годовой суммы осадков (b=0.995 мм/10 лет), однако статистически значимым является лишь тренд средней годовой температуры воздуха.\n\n\nПоказать код\nlibrary(tidyverse)\nlibrary(ggpmisc)\nlibrary(patchwork)\nBakhta_monthly &lt;- read.csv2(\"../data/cleaned/Bakhta_monthly_1966-1976_replaced_by_average_Bor_Verkhn.csv\") |&gt; \n  filter(!is.na(Date))\n\nBakhta_annualy &lt;- Bakhta_monthly |&gt; \n  filter(Year!= 2023) |&gt; # Так как данные за 2023 год только до 31 мая\n  group_by(Year) |&gt; \n  summarise(Tavg = mean(Tavg),\n            Pr = sum(Pr))\n\nsame_components_for_graph &lt;- function(){\n  list(\n      stat_poly_line(),\n      stat_poly_eq(use_label(c(\"eq\"))),\n      stat_poly_eq(use_label(c(\"R2\", \"P\")), label.y = 0.85),\n      theme_bw(),\n      theme(text=element_text(family=\"sans\", size = 10,\n                              colour = \"black\" ),\n            plot.caption = element_text(size = 11,\n                                        hjust = 0.5,\n                                        lineheight = 0.5),\n            plot.title = element_text(size = 14,\n                                        hjust = 0.5,\n                                        lineheight = 0.5)\n      )\n      \n  )\n} # добавляет на график линию тренда и уравнение\n\n\n# график среднегодовой температуры воздуха\ntemperature &lt;- ggplot(Bakhta_annualy, aes(Year, Tavg))+\n  geom_line()+\n  labs(y = \"Среднегодовая температура \\n воздуха [\\u00B0C]\",\n       x = \"\")+\n  same_components_for_graph()\n\n# график годовых сумм осадков\nprec &lt;- ggplot(Bakhta_annualy, aes(Year, Pr))+\n  geom_col()+\n  labs(y = \"Годовая сумма осадков [мм]\",\n       x = \"Год\")+\n  same_components_for_graph()\n\n# сведенные графики\ntemperature / prec + plot_annotation(\n  title = \"Тренды среднегодовой температуры и сумм осадков\", \n      caption = \n      \"y = intercept+b*x  - уравнение линейной регрессии,\n      где x - год,\n      b - угол наклона регрессионной прямой,\n      intercept - свободный член уравнения.\n      R\\u00B2 - коэффициент детерминации уравнения линейной регрессии\n      P - p-уровень значимости\") &\n      theme(plot.caption = element_text(size = 11,\n                                        hjust = 0.5,\n                                        lineheight = 0.7))"
  },
  {
    "objectID": "index.html#аномалии-приземной-температуры-воздуха",
    "href": "index.html#аномалии-приземной-температуры-воздуха",
    "title": "Современные изменения климата района исследования",
    "section": "Аномалии приземной температуры воздуха",
    "text": "Аномалии приземной температуры воздуха\nАномалии были рассчитаны как разность между средней температурой воздуха в определённый год или месяц и средней годовой/месячной температурой за выбранный опорный период (1961-1980).\nНа территории исследований наблюдается статистически значимый положительный тренд аномалий средней годовой приземной температуры воздуха с коэффициентом линейного тренда b=0.0483 °C/10 лет. Кроме того, значимы положительные тренды для следующих месяцев (в порядке убывания темппов роста): февраля (b=0.0941°C/10 лет), мая (b=0.0903°C/10 лет), марта (b=0.0857°C/10 лет), апреля (b=0.076°C/10 лет), июня (b=0.0537°C/10 лет), октября (b=0.0631°C/10 лет).\n\n\nПоказать код\n# средние значения за опорный период\nbase_annual &lt;- Bakhta_monthly |&gt; \n  filter(Year %in% c(1961:1980)) |&gt; \n  summarise(Tavg_base = mean(Tavg),\n            Pr_base = mean(Pr))\n# среднегодовые аномалии\nBakhta_annual_anomaly &lt;- Bakhta_monthly |&gt;\n  group_by(Year) |&gt; \n  summarise(Tavg = mean(Tavg),\n            Pr = mean(Pr),\n            Sn = mean(Sn)) |&gt; \n  mutate(Tavg_base = base_annual$Tavg_base,\n         Pr_base = base_annual$Pr_base) |&gt; \n  mutate(Tavg_anomaly = Tavg - Tavg_base,\n         Pr_anomaly = Pr - Pr_base)\n\n# среднемесячные за опорный период\nbase_monthly &lt;- Bakhta_monthly |&gt; \n  filter(Year %in% c(1961:1980)) |&gt; \n  group_by(Month) |&gt; \n  summarise(Tavg_base = mean(Tavg),\n            Pr_base = mean(Pr))\n# аномалии по месяцам\nBakhta_monthly_anomaly &lt;- Bakhta_monthly |&gt; \n  left_join(base_monthly, by = c(\"Month\")) |&gt; \n  mutate(Tavg_anomaly = Tavg - Tavg_base,\n         Pr_anomaly = Pr - Pr_base)\n\n\n#Графики\n# 2023 год надо исключать, потому что он неполный\ngraph_annualy_anomaly_temp &lt;- Bakhta_annual_anomaly |&gt; \n  filter(Year != 2023) |&gt;\n  ggplot(aes(Year, Tavg_anomaly))+\n  geom_line()+\n  labs(title = \"\",\n       x = \"\",\n       y = \"Температурные аномалии, [\\u00B0C]\")+\n  same_components_for_graph()\n\nBakhta_monthly_anomaly &lt;- Bakhta_monthly_anomaly |&gt; \n  mutate(Month = factor(Month, labels = c(\"Январь\", \"Февраль\", \"Март\",\n                                          \"Апрель\", \"Май\",\"Июнь\",\"Июль\",\n                                          \"Август\",\"Сентябрь\",\"Октябрь\",\n                                          \"Ноябрь\", \"Декабрь\")))\n\n# Отклонения  температуры воздуха по месяцам\ngraph_monthly_anomaly_temp &lt;- ggplot(Bakhta_monthly_anomaly, aes(Year, Tavg_anomaly))+\n  geom_line()+\n  facet_wrap(.~Month, ncol = 3)+\n  labs(title = \"\",\n       x = \"Год\",\n       y = \"Температурные аномалии, [\\u00B0C]\")+\n  ylim(NA,20)+\n  same_components_for_graph()\n\ngraph_annualy_anomaly_temp / graph_monthly_anomaly_temp + \n  plot_layout(heights = c(1,5))+\n  plot_annotation(\n  title = \"Аномалии средней годовой и средних месячных\n          \\nприземных температур воздуха\", \n      caption = \n      \"y = intercept+b*x  - уравнение линейной регрессии,\n      где y - температура воздуха, x - год,\n      b - угол наклона регрессионной прямой,\n      intercept - свободный член уравнения.\n      R\\u00B2 - коэффициент детерминации уравнения линейной регрессии\n      P - p-уровень значимости\") &\n      theme(plot.caption = element_text(size = 11,\n                                        hjust = 0.5,\n                                        lineheight = 0.7),\n            plot.title = element_text(size = 14,\n                                        hjust = 0.5,\n                                        lineheight = 0.7))"
  },
  {
    "objectID": "index.html#аномалии-количества-осадков",
    "href": "index.html#аномалии-количества-осадков",
    "title": "Современные изменения климата района исследования",
    "section": "Аномалии количества осадков",
    "text": "Аномалии количества осадков\nСтатистически значимый положительный тренд аномалий количества осадков характерен только для февраля (b=0.191 мм/10 лет) и марта (b=0.319 мм/10 лет). Для остальных месяцев характерны незначимые положительные либо отсутствие тренда. Июль характеризуется статистически незначимым нисходящим трендом (b=-0.32 мм/10лет).\n\n\nПоказать код\ngraph_annualy_anomaly_prec &lt;- Bakhta_annual_anomaly |&gt; \n  filter(Year != 2023) |&gt;\n  ggplot(aes(Year, Pr_anomaly))+\n  geom_col()+\n  labs(title =\"\",\n       x = \"\",\n       y = \"Отклонения [мм]\")+\n  same_components_for_graph()\n\n# Отклонения от среднемесячной за 1961-1980 гг. суммы осадков [мм]\ngraph_monthly_anomaly_prec &lt;- ggplot(Bakhta_monthly_anomaly, aes(Year, Pr_anomaly))+\n  geom_col()+\n  facet_wrap(.~Month, ncol = 3)+\n  labs(title = \"\",\n       x = \"Год\",\n       y = \"Отклонения [мм]\")+\n  same_components_for_graph()\n\ngraph_annualy_anomaly_prec / graph_monthly_anomaly_prec +\n  plot_layout(heights = c(1,5))+\n  plot_annotation(\n  title = \"Аномалии  годовой и среднемесячных\n          \\nсумм осадков\", \n      caption = \n      \"y = intercept+b*x  - уравнение линейной регрессии,\n      где y - сумма осадков, x - год,\n      b - угол наклона регрессионной прямой,\n      intercept - свободный член уравнения.\n      R\\u00B2 - коэффициент детерминации уравнения линейной регрессии\n      P - p-уровень значимости\") &\n      theme(plot.caption = element_text(size = 11,\n                                        hjust = 0.5,\n                                        lineheight = 0.7),\n            plot.title = element_text(size = 14,\n                                        hjust = 0.5,\n                                        lineheight = 0.7))"
  }
]